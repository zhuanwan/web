"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[865],{60865:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ base)\n});\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.function.name.js\nvar es_function_name = __webpack_require__(62010);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.assign.js\nvar es_object_assign = __webpack_require__(69085);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.object.to-string.js\nvar es_object_to_string = __webpack_require__(26099);\n// EXTERNAL MODULE: ./node_modules/echarts-for-react/esm/index.js + 6 modules\nvar esm = __webpack_require__(84519);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.concat.js\nvar es_array_concat = __webpack_require__(28706);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.map.js\nvar es_array_map = __webpack_require__(62062);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.array.slice.js\nvar es_array_slice = __webpack_require__(34782);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.number.constructor.js\nvar es_number_constructor = __webpack_require__(2892);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom-collections.for-each.js\nvar web_dom_collections_for_each = __webpack_require__(23500);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es.math.trunc.js\nvar es_math_trunc = __webpack_require__(70761);\n;// ./src/utils/base.js\n\n\n/**\r\n * 对于10000以上的数据做转换（配合单位转换）\r\n * 保留小数位数时不做四舍五入，默认保留2位小数\r\n * convertToWanArr(99999.99)=>[9.9, '万'] , convertToWanArr(44.89, 0)=>[44, '']\r\n * @param { type: number, desc: 需要转换的数值 } num\r\n * @param { type: number, desc: 保留小数位数 } decimalPlaces\r\n * @return { type: array, desc: 转化后的数字和单位}\r\n */\n\nfunction convertToWanArr(num, decimal) {\n  if (decimal === void 0) {\n    decimal = 2;\n  }\n  var thresholds = [10000, 10000, 10000];\n  var units = ['万', '亿', '万亿'];\n  if (num === '' || num === null || isNaN(num)) {\n    return ['--', ''];\n  }\n  var newUnit = '';\n  var newNum = num;\n  for (var i = 0; i < thresholds.length; i++) {\n    var t = thresholds[i];\n    if (Math.abs(newNum) >= t) {\n      newNum /= t;\n      newUnit = units[i];\n    } else {\n      break;\n    }\n  }\n  newNum = Math.trunc(newNum * Math.pow(10, decimal)) / Math.pow(10, decimal);\n  return [newNum, newUnit];\n}\n\n// 保留小数位数时不做四舍五入\nvar base_numFloorFormat = function numFloorFormat(num, decimal, nodataSymbol) {\n  if (decimal === void 0) {\n    decimal = 2;\n  }\n  if (nodataSymbol === void 0) {\n    nodataSymbol = '--';\n  }\n  if (num === '' || num === null) {\n    return nodataSymbol;\n  }\n  if (isNaN(num)) {\n    return nodataSymbol;\n  }\n  var n = Number(num);\n  return Math.trunc(n * Math.pow(10, decimal)) / Math.pow(10, decimal);\n};\n;// ./src/utils/index.js\n\n;// ./src/pages/echarts/base/chart-config.js\n\n\n\n\n\n\n\n\n\n\n// 绘制左侧面\nvar CubeLeft = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // x,y 是基准点，exHeight是突出来的高度，y2是y=0时实际y轴的值\n    var x = shape.x,\n      y = shape.y,\n      barWidth = shape.barWidth,\n      exHeight = shape.exHeight,\n      y2 = shape.y2;\n    var c0 = [x, y];\n    var c1 = [x - barWidth, y - exHeight];\n    var c2 = [x - barWidth, y2];\n    var c3 = [x, y2];\n    ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n  }\n});\n// 绘制右侧面\nvar CubeRight = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // x,y 是基准点，exHeight是突出来的高度，y2是y=0时实际y轴的值\n    var x = shape.x,\n      y = shape.y,\n      barWidth = shape.barWidth,\n      exHeight = shape.exHeight,\n      y2 = shape.y2;\n    var c0 = [x, y];\n    var c1 = [x + barWidth, y - exHeight];\n    var c2 = [x + barWidth, y2];\n    var c3 = [x, y2];\n    ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n  }\n});\n// 绘制顶面\nvar CubeTop = echarts.graphic.extendShape({\n  shape: {\n    x: 0,\n    y: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    // x,y 是基准点，exHeight是突出来的高度\n    var x = shape.x,\n      y = shape.y,\n      barWidth = shape.barWidth,\n      exHeight = shape.exHeight;\n    var c0 = [x, y];\n    var c1 = [x - barWidth, y - exHeight];\n    var c2 = [x, y - 2 * exHeight];\n    var c3 = [x + barWidth, y - exHeight];\n    ctx.moveTo(c0[0], c0[1]).lineTo(c1[0], c1[1]).lineTo(c2[0], c2[1]).lineTo(c3[0], c3[1]).closePath();\n  }\n});\n// 注册三个面图形\necharts.graphic.registerShape('CubeLeft', CubeLeft);\necharts.graphic.registerShape('CubeRight', CubeRight);\necharts.graphic.registerShape('CubeTop', CubeTop);\n\n// 浮层通用样式\nvar markerStyle = \"display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;\";\nvar axisLabelColor = 'rgba(255,255,255,0.6)'; // 坐标轴 数值颜色\nvar axisLabelFontSize = 12; // 坐标轴 数值fontsize\nvar axisLineColor = '#6E7079'; // 坐标轴线 颜色\nvar splitLineColor = 'rgba(255, 255, 255, 0.15)'; // 分隔线颜色\n\n// 矩形树图（红色色系）\nvar redSeriesColors = ['#FF6A6A', '#FF9292', '#FF734D', '#FF8E6F', '#FF9447', '#DB8F1E', '#FFAE33', '#FFAA92', '#FFAE73', '#FFC69C', '#FFD9A0'];\n\n// 矩形树图（蓝色色系）\nvar blueSeriesColors = (/* unused pure expression or super */ null && (['#00B063', '#00E581', '#27FFA1', '#00B08A', '#03CBA0', '#009398', '#00B9BF', '#00D3DB', '#00E2B1', '#03FFC8', '#3FF8FF']));\n\n// s尖,p峰,f平,v谷,\nvar colorPeriod = {\n  s: ['#901A1A', '#FF5858', '#FF5858'],\n  p: ['#8D6604', '#D0A128', '#F7C034'],\n  f: ['#0035AD', '#306FFF', '#306FFF'],\n  v: ['#017E48', '#03DB7D', '#03DB7D']\n};\n\n// 菱形柱形颜色列表\nvar cubeBarColors = (/* unused pure expression or super */ null && ([['#0035AD', '#306FFF'], ['#A88324', '#F7C034']]));\n\n// y轴通用配置\nvar yAxisConfig = {\n  type: 'value',\n  max: function max(v) {\n    return Math.round(v.max + v.max / 5);\n  },\n  splitNumber: 5,\n  axisLabel: {\n    show: false,\n    color: axisLabelColor,\n    fontSize: axisLabelFontSize\n  },\n  axisLine: {\n    show: false,\n    lineStyle: {\n      width: 1,\n      color: axisLineColor\n    }\n  },\n  axisTick: {\n    show: false\n  },\n  splitLine: {\n    lineStyle: {\n      width: 0.5,\n      color: splitLineColor,\n      type: 'dashed'\n    }\n  }\n};\n\n// markline通用配置\nvar markLine = function markLine(markLineData) {\n  return {\n    emphasis: {\n      disabled: true\n    },\n    symbol: ['none', 'none'],\n    label: {\n      show: false\n    },\n    data: markLineData.map(function (el) {\n      var _el$color;\n      return {\n        name: el.name,\n        yAxis: el.yAxis,\n        lineStyle: {\n          color: (_el$color = el.color) != null ? _el$color : '#ffd858'\n        }\n      };\n    })\n  };\n};\n\n/**\r\n * 立方体对比柱形图\r\n * @param {type: number, desc: 柱体宽度} barWidth\r\n * @param {type: number, desc: 倾斜角度} barAngle\r\n * @param {type: array, desc: 时间轴} timeSlot\r\n * @param {type: array, desc: 包含了名称、数据、颜色等信息, example: [{name:string, data:array, color:string[]}...] } seriesData\r\n * @param {type: array, desc: 颜色隐射, 0:顶部颜色, 1:左侧颜色, 2:右侧颜色} colorArr\r\n * @param {type: array, desc: 类目单位} units\r\n */\nvar contrastBarChart = function contrastBarChart(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    _ref$timeSlot = _ref.timeSlot,\n    timeSlot = _ref$timeSlot === void 0 ? [] : _ref$timeSlot,\n    _ref$barWidth = _ref.barWidth,\n    barWidth = _ref$barWidth === void 0 ? 12 : _ref$barWidth,\n    _ref$seriesData = _ref.seriesData,\n    seriesData = _ref$seriesData === void 0 ? [] : _ref$seriesData,\n    _ref$colorArr = _ref.colorArr,\n    colorArr = _ref$colorArr === void 0 ? [['#00E2FC', '#0293A4', '#00E2FC'], ['#FFD858', '#DCAE17', '#FFD858']] : _ref$colorArr,\n    _ref$units = _ref.units,\n    units = _ref$units === void 0 ? [] : _ref$units;\n  var radians = 30 * Math.PI / 180;\n  var exHeight = barWidth * Math.tan(radians);\n  // 批量处理柱体\n  var customs = [];\n  var offsets = [-12, 12];\n  var seriesCustom = function seriesCustom(data, colors, offset) {\n    if (data === void 0) {\n      data = [];\n    }\n    if (colors === void 0) {\n      colors = [];\n    }\n    if (offset === void 0) {\n      offset = 0;\n    }\n    return {\n      type: 'custom',\n      renderItem: function renderItem(_, api) {\n        var _api$coord = api.coord([api.value(0), api.value(1)]),\n          x = _api$coord[0],\n          y = _api$coord[1];\n        var _api$coord2 = api.coord([api.value(0), 0]),\n          x2 = _api$coord2[0],\n          y2 = _api$coord2[1];\n        return {\n          type: 'group',\n          x: offset,\n          children: [{\n            type: 'CubeLeft',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              exHeight: exHeight,\n              barWidth: barWidth\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colors[1]\n              }, {\n                offset: 1,\n                color: '#f00'\n              }])\n            }\n          }, {\n            type: 'CubeRight',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              exHeight: exHeight,\n              barWidth: barWidth\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colors[2]\n              }, {\n                offset: 1,\n                color: '#f00'\n              }])\n            }\n          }, {\n            type: 'CubeTop',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              exHeight: exHeight,\n              barWidth: barWidth\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colors[0]\n              }, {\n                offset: 1,\n                color: colors[0]\n              }])\n            }\n          }]\n        };\n      },\n      data: data\n    };\n  };\n  seriesData.forEach(function (el, index) {\n    customs.push(seriesCustom(el.data, colorArr[index], offsets[index]));\n  });\n  var option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      },\n      formatter: function formatter(params) {\n        var dataIndex = params[0].dataIndex;\n        var html = timeSlot[dataIndex] + \"<br/>\";\n        params.forEach(function (el, index) {\n          if (el.seriesType === 'custom') {\n            var _units$index;\n            html += \"<span style=\\\"\" + markerStyle + \"background-color:\" + colorArr[index][0] + \";\\\"></span>\" + seriesData[index].name + \"\\uFF1A\" + base_numFloorFormat(el.data) + \" \" + ((_units$index = units[index]) != null ? _units$index : '') + \"<br/>\";\n          }\n        });\n        return \"\" + html;\n      }\n    },\n    grid: {\n      left: '10px',\n      right: '10px',\n      top: '5%',\n      bottom: '5%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      data: timeSlot,\n      axisLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          color: axisLineColor\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        fontSize: axisLabelFontSize\n      }\n    },\n    yAxis: Object.assign({}, yAxisConfig, {\n      axisLabel: {\n        show: true,\n        color: axisLabelColor\n      }\n    }),\n    series: [].concat(customs, [{\n      data: [],\n      type: 'bar',\n      itemStyle: {\n        color: 'transparent'\n      }\n    }])\n  };\n  return option;\n};\n\n/**\r\n * 叠加立体柱形图\r\n * @param {type: array, desc: 时间轴} timeSlot\r\n * @param {type: number, desc: 柱体宽度} barWidth\r\n * @param {type: boolean, desc: 是否显示y轴信息} showYAxis\r\n * @param {type: array, desc: 类目单位} units\r\n * @param {type: array, desc: 包含了名称、数据、颜色等信息, example: [{name:string, data:array, color:string[]}...] } seriesData\r\n */\nvar overlayCubeBarChart = function overlayCubeBarChart(_temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n    _ref2$timeSlot = _ref2.timeSlot,\n    timeSlot = _ref2$timeSlot === void 0 ? [] : _ref2$timeSlot,\n    _ref2$showYAxis = _ref2.showYAxis,\n    showYAxis = _ref2$showYAxis === void 0 ? false : _ref2$showYAxis,\n    _ref2$seriesData = _ref2.seriesData,\n    seriesData = _ref2$seriesData === void 0 ? [] : _ref2$seriesData,\n    _ref2$barWidth = _ref2.barWidth,\n    barWidth = _ref2$barWidth === void 0 ? 30 : _ref2$barWidth,\n    _ref2$units = _ref2.units,\n    units = _ref2$units === void 0 ? [] : _ref2$units;\n  var diamondData = seriesData.reduce(function (pre, cur, index) {\n    pre[index] = cur.data.map(function (el, id) {\n      return el + (pre[index - 1] ? pre[index - 1][id] : 0);\n    });\n    return pre;\n  }, []);\n\n  // 菱形柱体颜色\n  var color = [].concat(seriesData).map(function (el) {\n    return [{\n      offset: 0,\n      color: el.color[0]\n    }, {\n      offset: 0.5,\n      color: el.color[0]\n    }, {\n      offset: 0.5,\n      color: el.color[1]\n    }, {\n      offset: 1,\n      color: el.color[1]\n    }];\n  });\n\n  // 菱形顶部颜色\n  var colorStops = [];\n  color.forEach(function (el, index) {\n    if (index !== 0) {\n      colorStops.push(el);\n    }\n  });\n  var lastColor = color[color.length - 1] ? color[color.length - 1][3].color : 'transparent';\n  colorStops.push([{\n    offset: 0,\n    color: lastColor\n  }, {\n    offset: 0.5,\n    color: lastColor\n  }, {\n    offset: 0.5,\n    color: lastColor\n  }, {\n    offset: 1,\n    color: lastColor\n  }]);\n\n  // 最终要展示的数据\n  var series = seriesData.reduce(function (p, c, i, array) {\n    p.push({\n      z: i + 1,\n      stack: '总量',\n      type: 'bar',\n      name: c.name,\n      barWidth: barWidth,\n      data: c.data,\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          x2: 1,\n          y: 0,\n          y2: 0,\n          colorStops: color[i]\n        }\n      }\n    }, {\n      z: i + 10,\n      type: 'pictorialBar',\n      symbolPosition: 'end',\n      symbol: 'diamond',\n      symbolOffset: ['0%', '-50%'],\n      symbolSize: [barWidth, 10],\n      data: diamondData[i],\n      itemStyle: {\n        color: {\n          type: 'linear',\n          x: 0,\n          x2: 1,\n          y: 0,\n          y2: 0,\n          colorStops: colorStops[i]\n        }\n      },\n      tooltip: {\n        show: false\n      }\n    });\n\n    // 是否最后一个了？\n    if (p.length === array.length * 2) {\n      p.push({\n        z: array.length * 2,\n        type: 'pictorialBar',\n        symbolPosition: 'start',\n        data: seriesData[0].data,\n        symbol: 'diamond',\n        symbolOffset: ['0%', '50%'],\n        symbolSize: [barWidth, 10],\n        itemStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            x2: 1,\n            y: 0,\n            y2: 0,\n            colorStops: color[0]\n          }\n        },\n        tooltip: {\n          show: false\n        }\n      });\n      return p;\n    }\n    return p;\n  }, []);\n\n  // tooltip\n  var tooltip = {\n    trigger: 'axis',\n    axisPointer: {\n      type: 'shadow'\n    },\n    formatter: function formatter(params) {\n      var dataIndex = params[0].dataIndex;\n      var html = timeSlot[dataIndex] + \"<br/>\";\n      params.forEach(function (el, index) {\n        var _units$index2;\n        html += \"<span style=\\\"\" + markerStyle + \"background-color:\" + seriesData[index].color[1] + \";\\\"></span>\" + seriesData[index].name + \"\\uFF1A\" + base_numFloorFormat(el.data) + \" \" + ((_units$index2 = units[index]) != null ? _units$index2 : '') + \"<br/>\";\n      });\n      return \"\" + html;\n    }\n  };\n\n  // grid\n  var grid = {\n    left: '10px',\n    right: '10px',\n    top: '5%',\n    bottom: '5%',\n    containLabel: true\n  };\n\n  // xAxis\n  var xAxis = {\n    type: 'category',\n    data: timeSlot,\n    axisLine: {\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: false\n    },\n    axisLabel: {\n      color: axisLabelColor,\n      fontSize: axisLabelFontSize,\n      fontStyle: 100\n    }\n  };\n\n  // yAxis\n  var yAxis = showYAxis ? Object.assign({}, yAxisConfig, {\n    axisLabel: {\n      show: true\n    }\n  }) : Object.assign({}, yAxisConfig);\n  yAxis.max = null;\n\n  // 渲染\n  return {\n    tooltip: tooltip,\n    grid: grid,\n    xAxis: xAxis,\n    yAxis: yAxis,\n    series: series\n  };\n};\n\n/**\r\n * 渐变百分比环形图\r\n * @param { type: number, desc: 百分比} percent\r\n * @param { type: array, desc: 渐变颜色} linearColors\r\n * @param {type: number, desc: 环形宽度} barWidth\r\n */\nvar gradientPieChart = function gradientPieChart(_temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n    _ref3$percent = _ref3.percent,\n    percent = _ref3$percent === void 0 ? 0 : _ref3$percent,\n    _ref3$linearColors = _ref3.linearColors,\n    linearColors = _ref3$linearColors === void 0 ? ['#008BFF', '#3BDFE7'] : _ref3$linearColors,\n    _ref3$barWidth = _ref3.barWidth,\n    barWidth = _ref3$barWidth === void 0 ? 6 : _ref3$barWidth;\n  return {\n    angleAxis: {\n      show: false,\n      max: 100,\n      startAngle: 90\n    },\n    radiusAxis: {\n      type: 'category',\n      show: true,\n      axisLabel: {\n        show: false\n      },\n      axisLine: {\n        show: false\n      },\n      axisTick: {\n        show: false\n      }\n    },\n    polar: {\n      radius: '185%' // 图形大小\n    },\n    series: [{\n      type: 'bar',\n      data: [percent],\n      showBackground: true,\n      roundCap: true,\n      cursor: 'default',\n      backgroundStyle: {\n        color: 'rgba(255, 255, 255, 0.2)'\n      },\n      coordinateSystem: 'polar',\n      barWidth: barWidth,\n      itemStyle: {\n        normal: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: linearColors[0]\n            }, {\n              offset: 1,\n              color: linearColors[1]\n            }],\n            global: false\n          }\n        }\n      }\n    }]\n  };\n};\n\n/**\r\n * 立方体柱状图（单柱状）\r\n * @param {type: number, desc: 柱体宽度} barWidth\r\n * @param {type: number, desc: 倾斜角度} barAngle\r\n * @param {type: array, desc: 时间轴} timeSlot\r\n * @param {type: array, desc: 颜色隐射, 0:顶部颜色, 1:左侧颜色, 2:右侧颜色} colorArr\r\n * @param {type: array, desc: 类目单位} units\r\n * @param {type: boolean, desc: 是否显示y轴信息} showYAxis\r\n * @param {type: array, desc: 阈值线, example: [{ name: string, yAxis: number, color: string}...]} markLineData\r\n * @param {type: array, desc: 图例数据, example: [{name: string, data:array}...]} seriesData\r\n */\nvar cubeBarChart = function cubeBarChart(_temp4) {\n  var _ref4 = _temp4 === void 0 ? {} : _temp4,\n    _ref4$barWidth = _ref4.barWidth,\n    barWidth = _ref4$barWidth === void 0 ? 20 : _ref4$barWidth,\n    _ref4$timeSlot = _ref4.timeSlot,\n    timeSlot = _ref4$timeSlot === void 0 ? [] : _ref4$timeSlot,\n    _ref4$colorArr = _ref4.colorArr,\n    colorArr = _ref4$colorArr === void 0 ? ['#00E2FC', '#0293A4', '#00E2FC'] : _ref4$colorArr,\n    _ref4$showYAxis = _ref4.showYAxis,\n    showYAxis = _ref4$showYAxis === void 0 ? false : _ref4$showYAxis,\n    _ref4$units = _ref4.units,\n    units = _ref4$units === void 0 ? [] : _ref4$units,\n    _ref4$seriesData = _ref4.seriesData,\n    seriesData = _ref4$seriesData === void 0 ? [] : _ref4$seriesData,\n    _ref4$markLineData = _ref4.markLineData,\n    markLineData = _ref4$markLineData === void 0 ? [] : _ref4$markLineData;\n  var radians = 30 * Math.PI / 180;\n  var exHeight = barWidth * Math.tan(radians);\n  return {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      },\n      formatter: function formatter(params) {\n        var dataIndex = params[0].dataIndex;\n        var html = timeSlot[dataIndex] + \"<br/>\";\n        params.forEach(function (el, index) {\n          if (el.seriesType === 'custom') {\n            var _units$index3;\n            html += \"<span style=\\\"\" + markerStyle + \"background-color:\" + colorArr[0] + \";\\\"></span>\" + seriesData[index].name + \"\\uFF1A\" + base_numFloorFormat(el.data) + \" \" + ((_units$index3 = units[index]) != null ? _units$index3 : '');\n          }\n        });\n        return \"\" + html;\n      }\n    },\n    grid: {\n      left: '10px',\n      right: '10px',\n      top: '5%',\n      bottom: '5%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      data: timeSlot,\n      axisLine: {\n        lineStyle: {\n          color: axisLineColor\n        }\n      },\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        color: axisLabelColor,\n        fontSize: axisLabelFontSize,\n        fontStyle: 100\n      }\n    },\n    yAxis: showYAxis ? Object.assign({}, yAxisConfig, {\n      axisLabel: {\n        show: true\n      }\n    }) : Object.assign({}, yAxisConfig),\n    series: [{\n      type: 'custom',\n      renderItem: function renderItem(_, api) {\n        var _api$coord3 = api.coord([api.value(0), api.value(1)]),\n          x = _api$coord3[0],\n          y = _api$coord3[1];\n        var _api$coord4 = api.coord([api.value(0), 0]),\n          x2 = _api$coord4[0],\n          y2 = _api$coord4[1];\n        return {\n          type: 'group',\n          children: [{\n            type: 'CubeLeft',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              barWidth: barWidth,\n              exHeight: exHeight\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colorArr[1]\n              }, {\n                offset: 1,\n                color: '#f00'\n              }])\n            }\n          }, {\n            type: 'CubeRight',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              barWidth: barWidth,\n              exHeight: exHeight\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colorArr[2]\n              }, {\n                offset: 1,\n                color: '#f00'\n              }])\n            }\n          }, {\n            type: 'CubeTop',\n            shape: {\n              api: api,\n              x: x,\n              y: y,\n              y2: y2,\n              barWidth: barWidth,\n              exHeight: exHeight\n            },\n            style: {\n              fill: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: colorArr[0]\n              }, {\n                offset: 1,\n                color: colorArr[0]\n              }])\n            }\n          }]\n        };\n      },\n      data: seriesData[0].data\n    }, {\n      data: seriesData[0].data,\n      type: 'bar',\n      itemStyle: {\n        color: 'transparent'\n      },\n      markLine: markLine(markLineData)\n    }]\n  };\n};\n\n/**\r\n * 矩形树图\r\n * @param {type: array, desc: 要显示的数据, example: [{name:string, value: number, itemStyle:{color:string}, oName: string}...]} seriesData\r\n * @param {type: object, desc: 提示框组件} tooltip\r\n */\nvar treeMapChart = function treeMapChart(_temp5) {\n  var _ref5 = _temp5 === void 0 ? {} : _temp5,\n    _ref5$seriesData = _ref5.seriesData,\n    seriesData = _ref5$seriesData === void 0 ? [] : _ref5$seriesData,\n    _ref5$tooltip = _ref5.tooltip,\n    tooltip = _ref5$tooltip === void 0 ? {} : _ref5$tooltip;\n  return {\n    tooltip: tooltip,\n    series: [{\n      type: 'treemap',\n      width: '100%',\n      height: '100%',\n      roam: false,\n      nodeClick: false,\n      breadcrumb: false,\n      itemStyle: {\n        borderColor: 'transparent',\n        borderWidth: 2,\n        borderRadius: 4\n      },\n      label: {\n        // align: 'center',\n        // verticalAlign: 'middle',\n        padding: [10, 0, 0, 10],\n        rich: {\n          a: {\n            fontSize: 14,\n            fontWeight: 'bold',\n            lineHeight: 20\n          },\n          b: {\n            fontSize: 12,\n            lineHeight: 18,\n            width: 50,\n            fontWeight: 200\n          },\n          c: {\n            fontSize: 12,\n            lineHeight: 18,\n            fontWeight: 200\n          }\n        }\n      },\n      emphasis: {\n        label: {\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          borderWidth: 5\n        }\n      },\n      data: seriesData\n    }]\n  };\n};\n\n/**\r\n * 基础曲线图\r\n * @param {type: array, desc: 时间轴} timeSlot\r\n * @param {type: string, desc: 日期类型} picker\r\n * @param {type: object, desc: 图例样式} legendCon\r\n * @param {type: object, desc: y轴配置} yAxisCon\r\n * @param {type: array, desc: 类目单位} units\r\n * @param {type: array, desc: 阈值线, example: [{ name: string, yAxis: number, color: string}...]} markLineData\r\n * @param {type: array, desc: 曲线数据, example: [{name: string, data: array, color: string}...]} seriesData\r\n */\nvar basisLineChart = function basisLineChart(_ref6) {\n  var _ref6$timeSlot = _ref6.timeSlot,\n    timeSlot = _ref6$timeSlot === void 0 ? [] : _ref6$timeSlot,\n    _ref6$picker = _ref6.picker,\n    picker = _ref6$picker === void 0 ? 'day' : _ref6$picker,\n    _ref6$units = _ref6.units,\n    units = _ref6$units === void 0 ? [] : _ref6$units,\n    _ref6$markLineData = _ref6.markLineData,\n    markLineData = _ref6$markLineData === void 0 ? [] : _ref6$markLineData,\n    _ref6$seriesData = _ref6.seriesData,\n    seriesData = _ref6$seriesData === void 0 ? [] : _ref6$seriesData,\n    _ref6$legendCon = _ref6.legendCon,\n    legendCon = _ref6$legendCon === void 0 ? {} : _ref6$legendCon,\n    _ref6$yAxisCon = _ref6.yAxisCon,\n    yAxisCon = _ref6$yAxisCon === void 0 ? {} : _ref6$yAxisCon;\n  // grid\n  var grid = {\n    left: '10px',\n    right: '10px',\n    top: '10%',\n    bottom: '10%',\n    containLabel: true\n  };\n\n  // xAxis\n  var xAxis = {\n    type: 'category',\n    data: timeSlot,\n    axisLine: {\n      lineStyle: {\n        color: axisLineColor\n      }\n    },\n    axisTick: {\n      show: false\n    },\n    axisLabel: {\n      color: axisLabelColor,\n      fontSize: axisLabelFontSize,\n      fontStyle: 100\n    }\n  };\n\n  // series\n  var series = [];\n  // legend\n  var legend = Object.assign({\n    show: seriesData.length > 1,\n    data: [],\n    bottom: 0,\n    icon: 'roundRect',\n    itemWidth: 10,\n    itemHeight: 10,\n    itemGap: 20\n  }, legendCon);\n  seriesData.forEach(function (el, index) {\n    var _el$type;\n    // series 组合\n    var item = {\n      name: el.name,\n      data: el.data,\n      color: el.color,\n      type: (_el$type = el.type) != null ? _el$type : 'line',\n      areaStyle: {\n        normal: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: '#f00'\n          }, {\n            offset: 1,\n            color: '#f00'\n          }], false)\n        }\n      },\n      smooth: true,\n      symbol: 'none'\n    };\n    if (index === 0) {\n      item.markLine = markLine(markLineData);\n    }\n    series.push(item);\n\n    // legend 组合\n    legend.data.push({\n      name: item.name,\n      itemStyle: {\n        color: item.color\n      },\n      textStyle: {\n        color: 'rgba(255, 255, 255, 0.6)',\n        fontSize: 12\n      }\n    });\n  });\n\n  // tooltip\n  var tooltip = {\n    trigger: 'axis',\n    formatter: function formatter(params) {\n      var dataIndex = params[0].dataIndex;\n      var time = timeSlot[dataIndex];\n      if (picker === 'day') {\n        var _timeSlot;\n        time += \"~\" + ((_timeSlot = timeSlot[dataIndex + 1]) != null ? _timeSlot : '00:00');\n      }\n      var html = time + \"<br/>\";\n      if (timeSlot[dataIndex] === '') {\n        html = '';\n      }\n      params.forEach(function (el, index) {\n        var _units$index4;\n        var name = seriesData[index].name ? \"<span style=\\\"\" + markerStyle + \"background-color:\" + seriesData[index].color + \";\\\"></span>\" + seriesData[index].name + \"\\uFF1A\" : \"<span style=\\\"\" + markerStyle + \"background-color:\" + seriesData[index].color + \";\\\"></span>\";\n        html += \"\" + name + numFloorFormat(el.data) + \" \" + ((_units$index4 = units[index]) != null ? _units$index4 : '') + \"<br/>\";\n      });\n      return \"\" + html;\n    }\n  };\n  return {\n    legend: legend,\n    tooltip: tooltip,\n    grid: grid,\n    xAxis: xAxis,\n    yAxis: Object.assign({}, yAxisConfig, {\n      max: null\n    }, yAxisCon),\n    series: series\n  };\n};\n\n// 返回x坐标轴 上 点的位置 所对应的颜色\n// spfvPeriod = [{term:'f', period:['07:00-09:00']}]\n// axisSpace 坐标轴间隔（15分钟、30分钟、60分钟）\nvar getSpfvAxisIndexColorMap = function getSpfvAxisIndexColorMap(spfvPeriod, axisSpace) {\n  if (axisSpace === void 0) {\n    axisSpace = 60;\n  }\n  var minuteToAxisIndexMap = {}; // {分钟：index}\n  var k = 0;\n  for (var i = 0; i < 1440; i += axisSpace) {\n    minuteToAxisIndexMap[\"\" + i] = k;\n    k++;\n  }\n  var map = {};\n  for (var _i = 0; _i < spfvPeriod.length; _i++) {\n    var _spfvPeriod$_i = spfvPeriod[_i],\n      term = _spfvPeriod$_i.term,\n      period = _spfvPeriod$_i.period;\n    for (var j = 0; j < period.length; j++) {\n      var timeStrArr = period[j].split('-');\n      var _timeStrArr$0$split = timeStrArr[0].split(':'),\n        startHour = _timeStrArr$0$split[0],\n        startMinute = _timeStrArr$0$split[1];\n      var _timeStrArr$1$split = timeStrArr[1].split(':'),\n        endHour = _timeStrArr$1$split[0],\n        endMinute = _timeStrArr$1$split[1];\n      var start = startHour * 60 + Number(startMinute);\n      var end = endHour * 60 + Number(endMinute);\n      if (end === 0) {\n        end = 1440;\n      }\n      for (var m = start; m < end; m += axisSpace) {\n        map[minuteToAxisIndexMap[m]] = colorPeriod[term];\n      }\n    }\n  }\n  return map;\n};\n\n/**\r\n * 分时段柱形图\r\n * @param {type: array, desc: 图例数据, example: [{name: string, value:array}...]} seriesData\r\n * @param {type: array, desc: 时间轴} timeSlot\r\n * @param {type: number, desc: 柱体宽度} barWidth\r\n * @param {type: array, desc: 类目单位} units\r\n * @param {type: array, desc: 尖峰平谷时段x坐标轴 上 点的位置 所对应的颜色} spfvAxisIndexColorMap\r\n */\nvar timePeriodBarChart = function timePeriodBarChart(_ref7) {\n  var _ref7$seriesData = _ref7.seriesData,\n    seriesData = _ref7$seriesData === void 0 ? [] : _ref7$seriesData,\n    _ref7$timeSlot = _ref7.timeSlot,\n    timeSlot = _ref7$timeSlot === void 0 ? [] : _ref7$timeSlot,\n    _ref7$barWidth = _ref7.barWidth,\n    barWidth = _ref7$barWidth === void 0 ? 18 : _ref7$barWidth,\n    _ref7$units = _ref7.units,\n    units = _ref7$units === void 0 ? [] : _ref7$units,\n    _ref7$spfvAxisIndexCo = _ref7.spfvAxisIndexColorMap,\n    spfvAxisIndexColorMap = _ref7$spfvAxisIndexCo === void 0 ? undefined : _ref7$spfvAxisIndexCo;\n  var getColor = function getColor(i, single) {\n    if (single === void 0) {\n      single = false;\n    }\n    var colorArr = colorPeriod.f; // 默认\"平\"颜色（s尖,p峰,f平,v谷）\n    if (spfvAxisIndexColorMap && spfvAxisIndexColorMap[i]) {\n      colorArr = spfvAxisIndexColorMap[i];\n    }\n    var _colorArr = colorArr,\n      color0 = _colorArr[0],\n      color1 = _colorArr[1],\n      color3 = _colorArr[2];\n    if (single) {\n      return color3;\n    }\n    return {\n      type: 'linear',\n      x: 0,\n      x2: 1,\n      y: 0,\n      y2: 0,\n      colorStops: [{\n        offset: 0,\n        color: color0\n      }, {\n        offset: 0.5,\n        color: color0\n      }, {\n        offset: 0.5,\n        color: color1\n      }, {\n        offset: 1,\n        color: color1\n      }]\n    };\n  };\n  var getSeries = function getSeries(data) {\n    var arr = [];\n    // 第一个是bar\n    var _data$ = data[0],\n      nameFirst = _data$.name,\n      valueFirst = _data$.value;\n    arr.push({\n      z: 1,\n      name: nameFirst,\n      type: 'bar',\n      barWidth: barWidth,\n      barGap: '-100%',\n      // 图表显示和tootip显示要一致，所以都截断数字\n      data: valueFirst.map(function (v, i) {\n        return {\n          value: base_numFloorFormat(v, 3),\n          itemStyle: {\n            normal: {\n              color: getColor(i)\n            }\n          }\n        };\n      })\n    });\n    arr.push({\n      z: 2,\n      name: nameFirst,\n      type: 'pictorialBar',\n      symbolPosition: 'end',\n      data: valueFirst.map(function (v, i) {\n        return {\n          value: v,\n          symbolOffset: v >= 0 ? ['0%', '-50%'] : ['0%', '50%'],\n          itemStyle: {\n            normal: {\n              color: getColor(i, true)\n            }\n          }\n        };\n      }),\n      symbol: 'diamond',\n      symbolOffset: ['0%', '-50%'],\n      symbolSize: [barWidth, 10],\n      tooltip: {\n        show: false\n      }\n    });\n    // 其他是line\n    var _loop = function _loop(i) {\n      var _data$i = data[i],\n        name = _data$i.name,\n        value = _data$i.value,\n        color = _data$i.color;\n      arr.push({\n        name: name,\n        type: 'line',\n        symbol: 'circle',\n        showSymbol: false,\n        smooth: true,\n        // 曲线\n        color: color,\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 1, 0, 0, [{\n            offset: 1,\n            color: '#f00'\n          }, {\n            offset: 0,\n            color: 'rgba(255, 255, 255, 0)'\n          }])\n        },\n        // 图表显示和tootip显示要一致，所以都截断数字\n        data: value == null ? void 0 : value.map(function (ele) {\n          return \"\" + base_numFloorFormat(ele, units[i] === '%' ? 5 : 3);\n        })\n      });\n    };\n    for (var i = 1; i < data.length; i++) {\n      _loop(i);\n    }\n    return arr;\n  };\n  var defaultConifg = {\n    grid: {\n      top: '16%',\n      left: '1%',\n      right: '1%',\n      bottom: '8%',\n      containLabel: true\n    },\n    legend: seriesData.length > 2 ? {\n      data: seriesData.slice(1).map(function (ele) {\n        return ele.name;\n      }),\n      top: 0,\n      textStyle: {\n        color: '#fff',\n        fontSize: 12\n      },\n      icon: 'roundRect',\n      itemWidth: 10,\n      itemHeight: 10,\n      itemGap: 30\n    } : null,\n    tooltip: {\n      confine: true,\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      },\n      formatter: function formatter(params) {\n        var h = params.reduce(function (prev, cur, i) {\n          var _convertToWanArr = convertToWanArr(cur.value),\n            value = _convertToWanArr[0],\n            unit = _convertToWanArr[1];\n          return prev + \"<div>\" + cur.marker + cur.seriesName + \"\\uFF1A\" + value + \" \" + unit + units[i] + \"</div>\";\n        }, '');\n        return \"<div>\" + timeSlot[params[0].dataIndex] + \"</div>\" + h;\n      }\n    },\n    xAxis: {\n      type: 'category',\n      data: timeSlot,\n      axisLine: {\n        onZero: false,\n        show: true,\n        lineStyle: {\n          color: axisLineColor\n        }\n      },\n      axisTick: false,\n      splitLine: false,\n      axisLabel: {\n        interval: 0,\n        show: true,\n        color: axisLabelColor,\n        fontSize: axisLabelFontSize\n      }\n    },\n    yAxis: {\n      type: 'value',\n      splitLine: {\n        show: true,\n        lineStyle: {\n          width: 1,\n          type: 'dashed',\n          color: splitLineColor\n        }\n      },\n      axisLabel: {\n        show: true,\n        color: axisLabelColor,\n        fontSize: axisLabelFontSize\n      },\n      axisLine: false,\n      axisTick: false\n    },\n    series: getSeries(seriesData)\n  };\n  return defaultConifg;\n};\n\n/**\r\n *  基础饼图\r\n * @param {type: array, desc: 图例数据, example: [{name: string, value: number, color: string}...]} seriesData\r\n */\nvar basisPieChart = function basisPieChart(_ref8) {\n  var _ref8$seriesData = _ref8.seriesData,\n    seriesData = _ref8$seriesData === void 0 ? [] : _ref8$seriesData;\n  return {\n    tooltip: {\n      show: false\n    },\n    legend: {\n      show: false\n    },\n    series: [{\n      label: {\n        formatter: '{b}：{d}%'\n      },\n      color: seriesData.map(function (el) {\n        return el.color;\n      }),\n      data: seriesData.map(function (el) {\n        return {\n          name: el.name,\n          value: el.value,\n          label: {\n            color: el.color\n          }\n        };\n      }),\n      type: 'pie',\n      radius: ['40%', '50%'],\n      labelLine: {\n        show: true,\n        length: 10,\n        length2: 0\n      }\n    }]\n  };\n};\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(74848);\n;// ./src/pages/echarts/base/index.jsx\n\n\n\n/**\r\n * 图表列表\r\n */\n\n\n\n\nvar Component = function Component() {\n  var treeMapList = [{\n    name: '1号楼',\n    field_pl: 100,\n    field_zb: 0.1\n  }, {\n    name: '2号楼',\n    field_pl: 80,\n    field_zb: 0.08\n  }, {\n    name: '3号楼',\n    field_pl: 60,\n    field_zb: 0.06\n  }, {\n    name: '4号楼',\n    field_pl: 50,\n    field_zb: 0.05\n  }, {\n    name: '5号楼',\n    field_pl: 50,\n    field_zb: 0.05\n  }, {\n    name: '6号楼',\n    field_pl: 20,\n    field_zb: 0.02\n  }, {\n    name: '7号楼',\n    field_pl: 10,\n    field_zb: 0.001\n  }];\n  var treeMapChartConfig = function treeMapChartConfig() {\n    // 基准数值，小于这个数值则需要做特殊处理\n    var basis = 20;\n    // 重做data数据\n    var seriesData = [];\n    treeMapList.forEach(function (el, idx) {\n      var _redSeriesColors$idx;\n      seriesData.push(Object.assign({}, el, {\n        name: el.field_pl <= basis ? \"{a|\" + el.name + \"}\" : \"{a|\" + el.name + \"}\\n{b|\\u78B3\\u6392\\u91CF} {a|\" + el.field_pl + \"} {c|(t)}\\n{b|\\u78B3\\u6392\\u5360\\u6BD4} {a|\" + el.field_zb + \"} {c|(%)}\",\n        value: el.field_pl < basis ? basis : el.field_pl,\n        itemStyle: {\n          color: (_redSeriesColors$idx = redSeriesColors[idx]) != null ? _redSeriesColors$idx : redSeriesColors[redSeriesColors.length - 1]\n        },\n        oName: el.name\n      }));\n    });\n    var config = treeMapChart({\n      tooltip: {\n        className: 'treemap-tooltip',\n        formatter: function formatter(params) {\n          var el = params.data;\n          if (el.name === undefined) return null;\n          return \"<ul>\\n                        <li>\" + el.oName + \"</li>\\n                        <li><span>\\u78B3\\u6392\\u91CF</span><strong>\" + el.field_pl + \"</strong>(t)</li>\\n                        <li><span>\\u78B3\\u6392\\u5360\\u6BD4</span><strong>\" + el.field_zb + \"</strong>(%)</li>\\n                    </ul>\";\n        }\n      },\n      seriesData: seriesData\n    });\n    return config;\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(\"div\", {\n    className: \"charts\",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: contrastBarChart({\n        timeSlot: ['2023年1月', '2023年2月', '2023年3月', '2023年4月', '2023年5月', '2023年6月', '2023年4月', '2023年5月', '2023年6月'],\n        seriesData: [{\n          name: '系列一',\n          data: [100, 200, 300, 400, 300, 200, 400, 300, 200]\n        }, {\n          name: '系列二',\n          data: [200, 100, 200, 300, 400, 300, 200, 400, 300]\n        }],\n        units: []\n      }),\n      style: {\n        height: '300px',\n        width: '1000px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: gradientPieChart({\n        percent: 60\n      }),\n      style: {\n        height: '100px',\n        width: '100px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: overlayCubeBarChart({\n        timeSlot: ['01:00', '02:00', '03:00', '04:00', '05:00', '06:00'],\n        seriesData: [{\n          name: '1级',\n          data: [1, 2, 3, 4, 5, 6],\n          color: ['#0035AD', '#306FFF']\n        }, {\n          name: '2级',\n          data: [2, 3, 4, 5, 6, 7],\n          color: ['#10B2B2', '#01FFFF']\n        }, {\n          name: '3级',\n          data: [3, 4, 5, 6, 7, 8],\n          color: ['#A88324', '#F7C034']\n        }],\n        units: ['次', '次', '次']\n        // colorStops: [\n        //     ['#10B2B2', '#01FFFF'],\n        //     ['#A88324', '#F7C034'],\n        //     ['#F7C034', '#F7C034'],\n        // ],\n      }),\n      style: {\n        height: '300px',\n        width: '1000px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: treeMapChartConfig(),\n      style: {\n        height: '300px',\n        width: '600px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: gradientPieChart({\n        percent: 60\n      }),\n      style: {\n        height: '100px',\n        width: '100px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: cubeBarChart({\n        timeSlot: ['2023年1月', '2023年2月', '2023年3月', '2023年4月', '2023年5月', '2023年6月', '2023年4月', '2023年5月', '2023年6月'],\n        seriesData: [{\n          name: '系列一',\n          data: [100, 200, 300, 400, 300, 200, 400, 300, 200]\n        }],\n        units: ['kW'],\n        markLineData: [{\n          name: '阈值1',\n          yAxis: 100,\n          color: '#F59A23'\n        }]\n      }),\n      style: {\n        height: '300px',\n        width: '1000px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: cubeBarChart({\n        timeSlot: ['2023年1月', '2023年2月', '2023年3月', '2023年4月', '2023年5月', '2023年6月', '2023年4月', '2023年5月', '2023年6月'],\n        seriesData: [{\n          name: '系列一',\n          data: [100, 200, 300, 400, 300, 200, 400, 300, 200]\n        }],\n        units: ['kW'],\n        markLineData: [{\n          name: '阈值1',\n          yAxis: 100,\n          color: '#F59A23'\n        }],\n        barWidth: 10\n      }),\n      style: {\n        height: '300px',\n        width: '1000px'\n      }\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* default */.A, {\n      option: timePeriodBarChart({\n        timeSlot: ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00'],\n        seriesData: [{\n          name: '柱状图',\n          value: [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, -5, 6, 3, 5, 5, -7, 2, 5, 5, 1, 6, 6, 8, 9]\n        }, {\n          name: '折线图1',\n          value: [3, 4, 5, 6, 3, 5, 5, 7, 2, 1, 2, 3, 4, 5, 6, 1, 2, 5, 5, 1, 6, 6, 8, 9],\n          color: '#10B2B2'\n        }, {\n          name: '折线图2',\n          value: [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 3, 5, 5, 7, 2, 5, 5, 1, 6, 6, 8, 9],\n          color: '#A88324'\n        }],\n        spfvAxisIndexColorMap: getSpfvAxisIndexColorMap([{\n          term: 'p',\n          period: ['10:00-12:00', '14:00-19:00']\n        }, {\n          term: 'f',\n          period: ['08:00-10:00', '12:00-14:00', '19:00-00:00']\n        }, {\n          term: 'v',\n          period: ['00:00-08:00']\n        }], 60),\n        units: ['次', 'kW', 'kW']\n      }),\n      style: {\n        height: '300px',\n        width: '100%'\n      }\n    })]\n  });\n};\n/* harmony default export */ const base = (Component);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///60865\n")}}]);