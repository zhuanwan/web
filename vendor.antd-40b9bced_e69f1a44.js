"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[6392],{6754:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ es_progress)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(96540);\n// EXTERNAL MODULE: ./node_modules/@ant-design/fast-color/es/index.js + 1 modules\nvar es = __webpack_require__(2616);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js + 1 modules\nvar CheckCircleFilled = __webpack_require__(38811);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CheckOutlined.js + 1 modules\nvar CheckOutlined = __webpack_require__(26067);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js + 1 modules\nvar CloseCircleFilled = __webpack_require__(36029);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseOutlined.js + 1 modules\nvar CloseOutlined = __webpack_require__(47852);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(46942);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/rc-util/es/omit.js\nvar omit = __webpack_require__(19853);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(62279);\n// EXTERNAL MODULE: ./node_modules/rc-progress/es/index.js + 6 modules\nvar rc_progress_es = __webpack_require__(71559);\n// EXTERNAL MODULE: ./node_modules/antd/es/tooltip/index.js + 4 modules\nvar tooltip = __webpack_require__(30485);\n// EXTERNAL MODULE: ./node_modules/@ant-design/colors/es/index.js + 2 modules\nvar colors_es = __webpack_require__(45748);\n;// ./node_modules/antd/es/progress/utils.js\n\nfunction validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nfunction getSuccessPercent(_ref) {\n  let {\n    success,\n    successPercent\n  } = _ref;\n  let percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nconst getPercentage = _ref2 => {\n  let {\n    percent,\n    success,\n    successPercent\n  } = _ref2;\n  const realSuccessPercent = validProgress(getSuccessPercent({\n    success,\n    successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nconst getStrokeColor = _ref3 => {\n  let {\n    success = {},\n    strokeColor\n  } = _ref3;\n  const {\n    strokeColor: successColor\n  } = success;\n  return [successColor || colors_es/* presetPrimaryColors */.uy.green, strokeColor || null];\n};\nconst getSize = (size, type, extra) => {\n  var _a, _b, _c, _d;\n  let width = -1;\n  let height = -1;\n  if (type === 'step') {\n    const steps = extra.steps;\n    const strokeWidth = extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      width = size === 'small' ? 2 : 14;\n      height = strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : 8;\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else {\n      [width = 14, height = 8] = Array.isArray(size) ? size : [size.width, size.height];\n    }\n    width *= steps;\n  } else if (type === 'line') {\n    const strokeWidth = extra === null || extra === void 0 ? void 0 : extra.strokeWidth;\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      height = strokeWidth || (size === 'small' ? 6 : 8);\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else {\n      [width = -1, height = 8] = Array.isArray(size) ? size : [size.width, size.height];\n    }\n  } else if (type === 'circle' || type === 'dashboard') {\n    if (typeof size === 'string' || typeof size === 'undefined') {\n      [width, height] = size === 'small' ? [60, 60] : [120, 120];\n    } else if (typeof size === 'number') {\n      [width, height] = [size, size];\n    } else if (Array.isArray(size)) {\n      width = (_b = (_a = size[0]) !== null && _a !== void 0 ? _a : size[1]) !== null && _b !== void 0 ? _b : 120;\n      height = (_d = (_c = size[0]) !== null && _c !== void 0 ? _c : size[1]) !== null && _d !== void 0 ? _d : 120;\n    }\n  }\n  return [width, height];\n};\n;// ./node_modules/antd/es/progress/Circle.js\n\"use client\";\n\n\n\n\n\n\nconst CIRCLE_MIN_STROKE_WIDTH = 3;\nconst getMinPercent = width => CIRCLE_MIN_STROKE_WIDTH / width * 100;\nconst Circle = props => {\n  const {\n    prefixCls,\n    trailColor = null,\n    strokeLinecap = 'round',\n    gapPosition,\n    gapDegree,\n    width: originWidth = 120,\n    type,\n    children,\n    success,\n    size = originWidth,\n    steps\n  } = props;\n  const [width, height] = getSize(size, 'circle');\n  let {\n    strokeWidth\n  } = props;\n  if (strokeWidth === undefined) {\n    strokeWidth = Math.max(getMinPercent(width), 6);\n  }\n  const circleStyle = {\n    width,\n    height,\n    fontSize: width * 0.15 + 6\n  };\n  const realGapDegree = react.useMemo(() => {\n    // Support gapDeg = 0 when type = 'dashboard'\n    if (gapDegree || gapDegree === 0) {\n      return gapDegree;\n    }\n    if (type === 'dashboard') {\n      return 75;\n    }\n    return undefined;\n  }, [gapDegree, type]);\n  const percentArray = getPercentage(props);\n  const gapPos = gapPosition || type === 'dashboard' && 'bottom' || undefined;\n  // using className to style stroke color\n  const isGradient = Object.prototype.toString.call(props.strokeColor) === '[object Object]';\n  const strokeColor = getStrokeColor({\n    success,\n    strokeColor: props.strokeColor\n  });\n  const wrapperClassName = classnames_default()(`${prefixCls}-inner`, {\n    [`${prefixCls}-circle-gradient`]: isGradient\n  });\n  const circleContent = /*#__PURE__*/react.createElement(rc_progress_es/* Circle */.jl, {\n    steps: steps,\n    percent: steps ? percentArray[1] : percentArray,\n    strokeWidth: strokeWidth,\n    trailWidth: strokeWidth,\n    strokeColor: steps ? strokeColor[1] : strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: realGapDegree,\n    gapPosition: gapPos\n  });\n  const smallCircle = width <= 20;\n  const node = /*#__PURE__*/react.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, circleContent, !smallCircle && children);\n  if (smallCircle) {\n    return /*#__PURE__*/react.createElement(tooltip/* default */.A, {\n      title: children\n    }, node);\n  }\n  return node;\n};\n/* harmony default export */ const progress_Circle = (Circle);\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs/es/index.js + 30 modules\nvar cssinjs_es = __webpack_require__(67466);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/index.js\nvar style = __webpack_require__(25905);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/util/genStyleUtils.js\nvar genStyleUtils = __webpack_require__(37358);\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs-utils/es/index.js + 12 modules\nvar cssinjs_utils_es = __webpack_require__(14277);\n;// ./node_modules/antd/es/progress/style/index.js\n\n\n\nconst LineStrokeColorVar = '--progress-line-stroke-color';\nconst Percent = '--progress-percent';\nconst genAntProgressActive = isRtl => {\n  const direction = isRtl ? '100%' : '-100%';\n  return new cssinjs_es/* Keyframes */.Mo(`antProgress${isRtl ? 'RTL' : 'LTR'}Active`, {\n    '0%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.1\n    },\n    '20%': {\n      transform: `translateX(${direction}) scaleX(0)`,\n      opacity: 0.5\n    },\n    to: {\n      transform: 'translateX(0) scaleX(1)',\n      opacity: 0\n    }\n  });\n};\nconst genBaseStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: Object.assign(Object.assign({}, (0,style/* resetComponent */.dF)(token)), {\n      display: 'inline-block',\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&-line': {\n        position: 'relative',\n        width: '100%',\n        fontSize: token.fontSize\n      },\n      [`${progressCls}-outer`]: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        width: '100%'\n      },\n      [`${progressCls}-inner`]: {\n        position: 'relative',\n        display: 'inline-block',\n        width: '100%',\n        flex: 1,\n        overflow: 'hidden',\n        verticalAlign: 'middle',\n        backgroundColor: token.remainingColor,\n        borderRadius: token.lineBorderRadius\n      },\n      [`${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.defaultColor\n        }\n      },\n      [`${progressCls}-success-bg, ${progressCls}-bg`]: {\n        position: 'relative',\n        background: token.defaultColor,\n        borderRadius: token.lineBorderRadius,\n        transition: `all ${token.motionDurationSlow} ${token.motionEaseInOutCirc}`\n      },\n      [`${progressCls}-layout-bottom`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [`${progressCls}-text`]: {\n          width: 'max-content',\n          marginInlineStart: 0,\n          marginTop: token.marginXXS\n        }\n      },\n      [`${progressCls}-bg`]: {\n        overflow: 'hidden',\n        '&::after': {\n          content: '\"\"',\n          background: {\n            _multi_value_: true,\n            value: ['inherit', `var(${LineStrokeColorVar})`]\n          },\n          height: '100%',\n          width: `calc(1 / var(${Percent}) * 100%)`,\n          display: 'block'\n        },\n        [`&${progressCls}-bg-inner`]: {\n          minWidth: 'max-content',\n          '&::after': {\n            content: 'none'\n          },\n          [`${progressCls}-text-inner`]: {\n            color: token.colorWhite,\n            [`&${progressCls}-text-bright`]: {\n              color: 'rgba(0, 0, 0, 0.45)'\n            }\n          }\n        }\n      },\n      [`${progressCls}-success-bg`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        backgroundColor: token.colorSuccess\n      },\n      [`${progressCls}-text`]: {\n        display: 'inline-block',\n        marginInlineStart: token.marginXS,\n        color: token.colorText,\n        lineHeight: 1,\n        width: '2em',\n        whiteSpace: 'nowrap',\n        textAlign: 'start',\n        verticalAlign: 'middle',\n        wordBreak: 'normal',\n        [iconPrefixCls]: {\n          fontSize: token.fontSize\n        },\n        [`&${progressCls}-text-outer`]: {\n          width: 'max-content'\n        },\n        [`&${progressCls}-text-outer${progressCls}-text-start`]: {\n          width: 'max-content',\n          marginInlineStart: 0,\n          marginInlineEnd: token.marginXS\n        }\n      },\n      [`${progressCls}-text-inner`]: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        marginInlineStart: 0,\n        padding: `0 ${(0,cssinjs_es/* unit */.zA)(token.paddingXXS)}`,\n        [`&${progressCls}-text-start`]: {\n          justifyContent: 'start'\n        },\n        [`&${progressCls}-text-end`]: {\n          justifyContent: 'end'\n        }\n      },\n      [`&${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: token.colorBgContainer,\n          borderRadius: token.lineBorderRadius,\n          opacity: 0,\n          animationName: genAntProgressActive(),\n          animationDuration: token.progressActiveMotionDuration,\n          animationTimingFunction: token.motionEaseOutQuint,\n          animationIterationCount: 'infinite',\n          content: '\"\"'\n        }\n      },\n      [`&${progressCls}-rtl${progressCls}-status-active`]: {\n        [`${progressCls}-bg::before`]: {\n          animationName: genAntProgressActive(true)\n        }\n      },\n      [`&${progressCls}-status-exception`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorError\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`&${progressCls}-status-exception ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorError\n        }\n      },\n      [`&${progressCls}-status-success`]: {\n        [`${progressCls}-bg`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      },\n      [`&${progressCls}-status-success ${progressCls}-inner:not(${progressCls}-circle-gradient)`]: {\n        [`${progressCls}-circle-path`]: {\n          stroke: token.colorSuccess\n        }\n      }\n    })\n  };\n};\nconst genCircleStyle = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-circle-trail`]: {\n        stroke: token.remainingColor\n      },\n      [`&${progressCls}-circle ${progressCls}-inner`]: {\n        position: 'relative',\n        lineHeight: 1,\n        backgroundColor: 'transparent'\n      },\n      [`&${progressCls}-circle ${progressCls}-text`]: {\n        position: 'absolute',\n        insetBlockStart: '50%',\n        insetInlineStart: 0,\n        width: '100%',\n        margin: 0,\n        padding: 0,\n        color: token.circleTextColor,\n        fontSize: token.circleTextFontSize,\n        lineHeight: 1,\n        whiteSpace: 'normal',\n        textAlign: 'center',\n        transform: 'translateY(-50%)',\n        [iconPrefixCls]: {\n          fontSize: token.circleIconFontSize\n        }\n      },\n      [`${progressCls}-circle&-status-exception`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorError\n        }\n      },\n      [`${progressCls}-circle&-status-success`]: {\n        [`${progressCls}-text`]: {\n          color: token.colorSuccess\n        }\n      }\n    },\n    [`${progressCls}-inline-circle`]: {\n      lineHeight: 1,\n      [`${progressCls}-inner`]: {\n        verticalAlign: 'bottom'\n      }\n    }\n  };\n};\nconst genStepStyle = token => {\n  const {\n    componentCls: progressCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-steps`]: {\n        display: 'inline-block',\n        '&-outer': {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center'\n        },\n        '&-item': {\n          flexShrink: 0,\n          minWidth: token.progressStepMinWidth,\n          marginInlineEnd: token.progressStepMarginInlineEnd,\n          backgroundColor: token.remainingColor,\n          transition: `all ${token.motionDurationSlow}`,\n          '&-active': {\n            backgroundColor: token.defaultColor\n          }\n        }\n      }\n    }\n  };\n};\nconst genSmallLine = token => {\n  const {\n    componentCls: progressCls,\n    iconCls: iconPrefixCls\n  } = token;\n  return {\n    [progressCls]: {\n      [`${progressCls}-small&-line, ${progressCls}-small&-line ${progressCls}-text ${iconPrefixCls}`]: {\n        fontSize: token.fontSizeSM\n      }\n    }\n  };\n};\nconst prepareComponentToken = token => ({\n  circleTextColor: token.colorText,\n  defaultColor: token.colorInfo,\n  remainingColor: token.colorFillSecondary,\n  lineBorderRadius: 100,\n  // magic for capsule shape, should be a very large number\n  circleTextFontSize: '1em',\n  circleIconFontSize: `${token.fontSize / token.fontSizeSM}em`\n});\n/* harmony default export */ const progress_style = ((0,genStyleUtils/* genStyleHooks */.OF)('Progress', token => {\n  const progressStepMarginInlineEnd = token.calc(token.marginXXS).div(2).equal();\n  const progressToken = (0,cssinjs_utils_es/* mergeToken */.oX)(token, {\n    progressStepMarginInlineEnd,\n    progressStepMinWidth: progressStepMarginInlineEnd,\n    progressActiveMotionDuration: '2.4s'\n  });\n  return [genBaseStyle(progressToken), genCircleStyle(progressToken), genStepStyle(progressToken), genSmallLine(progressToken)];\n}, prepareComponentToken));\n;// ./node_modules/antd/es/progress/Line.js\n\"use client\";\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n/**\n * @example\n *   {\n *     \"0%\": \"#afc163\",\n *     \"75%\": \"#009900\",\n *     \"50%\": \"green\", // ====> '#afc163 0%, #66FF00 25%, #00CC00 50%, #009900 75%, #ffffff 100%'\n *     \"25%\": \"#66FF00\",\n *     \"100%\": \"#ffffff\"\n *   }\n */\nconst sortGradient = gradients => {\n  let tempArr = [];\n  Object.keys(gradients).forEach(key => {\n    const formattedKey = parseFloat(key.replace(/%/g, ''));\n    if (!Number.isNaN(formattedKey)) {\n      tempArr.push({\n        key: formattedKey,\n        value: gradients[key]\n      });\n    }\n  });\n  tempArr = tempArr.sort((a, b) => a.key - b.key);\n  return tempArr.map(_ref => {\n    let {\n      key,\n      value\n    } = _ref;\n    return `${value} ${key}%`;\n  }).join(', ');\n};\n/**\n * Then this man came to realize the truth: Besides six pence, there is the moon. Besides bread and\n * butter, there is the bug. And... Besides women, there is the code.\n *\n * @example\n *   {\n *     \"0%\": \"#afc163\",\n *     \"25%\": \"#66FF00\",\n *     \"50%\": \"#00CC00\", // ====>  linear-gradient(to right, #afc163 0%, #66FF00 25%,\n *     \"75%\": \"#009900\", //        #00CC00 50%, #009900 75%, #ffffff 100%)\n *     \"100%\": \"#ffffff\"\n *   }\n */\nconst handleGradient = (strokeColor, directionConfig) => {\n  const {\n      from = colors_es/* presetPrimaryColors */.uy.blue,\n      to = colors_es/* presetPrimaryColors */.uy.blue,\n      direction = directionConfig === 'rtl' ? 'to left' : 'to right'\n    } = strokeColor,\n    rest = __rest(strokeColor, [\"from\", \"to\", \"direction\"]);\n  if (Object.keys(rest).length !== 0) {\n    const sortedGradients = sortGradient(rest);\n    const background = `linear-gradient(${direction}, ${sortedGradients})`;\n    return {\n      background,\n      [LineStrokeColorVar]: background\n    };\n  }\n  const background = `linear-gradient(${direction}, ${from}, ${to})`;\n  return {\n    background,\n    [LineStrokeColorVar]: background\n  };\n};\nconst Line = props => {\n  const {\n    prefixCls,\n    direction: directionConfig,\n    percent,\n    size,\n    strokeWidth,\n    strokeColor,\n    strokeLinecap = 'round',\n    children,\n    trailColor = null,\n    percentPosition,\n    success\n  } = props;\n  const {\n    align: infoAlign,\n    type: infoPosition\n  } = percentPosition;\n  const backgroundProps = strokeColor && typeof strokeColor !== 'string' ? handleGradient(strokeColor, directionConfig) : {\n    [LineStrokeColorVar]: strokeColor,\n    background: strokeColor\n  };\n  const borderRadius = strokeLinecap === 'square' || strokeLinecap === 'butt' ? 0 : undefined;\n  const mergedSize = size !== null && size !== void 0 ? size : [-1, strokeWidth || (size === 'small' ? 6 : 8)];\n  const [width, height] = getSize(mergedSize, 'line', {\n    strokeWidth\n  });\n  if (false) {}\n  const trailStyle = {\n    backgroundColor: trailColor || undefined,\n    borderRadius\n  };\n  const percentStyle = Object.assign(Object.assign({\n    width: `${validProgress(percent)}%`,\n    height,\n    borderRadius\n  }, backgroundProps), {\n    [Percent]: validProgress(percent) / 100\n  });\n  const successPercent = getSuccessPercent(props);\n  const successPercentStyle = {\n    width: `${validProgress(successPercent)}%`,\n    height,\n    borderRadius,\n    backgroundColor: success === null || success === void 0 ? void 0 : success.strokeColor\n  };\n  const outerStyle = {\n    width: width < 0 ? '100%' : width\n  };\n  const lineInner = /*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-inner`,\n    style: trailStyle\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: classnames_default()(`${prefixCls}-bg`, `${prefixCls}-bg-${infoPosition}`),\n    style: percentStyle\n  }, infoPosition === 'inner' && children), successPercent !== undefined && (/*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-success-bg`,\n    style: successPercentStyle\n  })));\n  const isOuterStart = infoPosition === 'outer' && infoAlign === 'start';\n  const isOuterEnd = infoPosition === 'outer' && infoAlign === 'end';\n  return infoPosition === 'outer' && infoAlign === 'center' ? (/*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-layout-bottom`\n  }, lineInner, children)) : (/*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-outer`,\n    style: outerStyle\n  }, isOuterStart && children, lineInner, isOuterEnd && children));\n};\n/* harmony default export */ const progress_Line = (Line);\n;// ./node_modules/antd/es/progress/Steps.js\n\"use client\";\n\n\n\n\nconst Steps = props => {\n  const {\n    size,\n    steps,\n    rounding: customRounding = Math.round,\n    percent = 0,\n    strokeWidth = 8,\n    strokeColor,\n    trailColor = null,\n    prefixCls,\n    children\n  } = props;\n  const current = customRounding(steps * (percent / 100));\n  const stepWidth = size === 'small' ? 2 : 14;\n  const mergedSize = size !== null && size !== void 0 ? size : [stepWidth, strokeWidth];\n  const [width, height] = getSize(mergedSize, 'step', {\n    steps,\n    strokeWidth\n  });\n  const unitWidth = width / steps;\n  const styledSteps = Array.from({\n    length: steps\n  });\n  for (let i = 0; i < steps; i++) {\n    const color = Array.isArray(strokeColor) ? strokeColor[i] : strokeColor;\n    styledSteps[i] = /*#__PURE__*/react.createElement(\"div\", {\n      key: i,\n      className: classnames_default()(`${prefixCls}-steps-item`, {\n        [`${prefixCls}-steps-item-active`]: i <= current - 1\n      }),\n      style: {\n        backgroundColor: i <= current - 1 ? color : trailColor,\n        width: unitWidth,\n        height\n      }\n    });\n  }\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-steps-outer`\n  }, styledSteps, children);\n};\n/* harmony default export */ const progress_Steps = (Steps);\n;// ./node_modules/antd/es/progress/progress.js\n\"use client\";\n\nvar progress_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ProgressTypes = (/* unused pure expression or super */ null && (['line', 'circle', 'dashboard']));\nconst ProgressStatuses = ['normal', 'exception', 'active', 'success'];\nconst Progress = /*#__PURE__*/react.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      steps,\n      strokeColor,\n      percent = 0,\n      size = 'default',\n      showInfo = true,\n      type = 'line',\n      status,\n      format,\n      style,\n      percentPosition = {}\n    } = props,\n    restProps = progress_rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"steps\", \"strokeColor\", \"percent\", \"size\", \"showInfo\", \"type\", \"status\", \"format\", \"style\", \"percentPosition\"]);\n  const {\n    align: infoAlign = 'end',\n    type: infoPosition = 'outer'\n  } = percentPosition;\n  const strokeColorNotArray = Array.isArray(strokeColor) ? strokeColor[0] : strokeColor;\n  const strokeColorNotGradient = typeof strokeColor === 'string' || Array.isArray(strokeColor) ? strokeColor : undefined;\n  const strokeColorIsBright = react.useMemo(() => {\n    if (strokeColorNotArray) {\n      const color = typeof strokeColorNotArray === 'string' ? strokeColorNotArray : Object.values(strokeColorNotArray)[0];\n      return new es/* FastColor */.Y(color).isLight();\n    }\n    return false;\n  }, [strokeColor]);\n  const percentNumber = react.useMemo(() => {\n    var _a, _b;\n    const successPercent = getSuccessPercent(props);\n    return parseInt(successPercent !== undefined ? (_a = successPercent !== null && successPercent !== void 0 ? successPercent : 0) === null || _a === void 0 ? void 0 : _a.toString() : (_b = percent !== null && percent !== void 0 ? percent : 0) === null || _b === void 0 ? void 0 : _b.toString(), 10);\n  }, [percent, props.success, props.successPercent]);\n  const progressStatus = react.useMemo(() => {\n    if (!ProgressStatuses.includes(status) && percentNumber >= 100) {\n      return 'success';\n    }\n    return status || 'normal';\n  }, [status, percentNumber]);\n  const {\n    getPrefixCls,\n    direction,\n    progress: progressStyle\n  } = react.useContext(context/* ConfigContext */.QO);\n  const prefixCls = getPrefixCls('progress', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = progress_style(prefixCls);\n  const isLineType = type === 'line';\n  const isPureLineType = isLineType && !steps;\n  const progressInfo = react.useMemo(() => {\n    if (!showInfo) {\n      return null;\n    }\n    const successPercent = getSuccessPercent(props);\n    let text;\n    const textFormatter = format || (number => `${number}%`);\n    const isBrightInnerColor = isLineType && strokeColorIsBright && infoPosition === 'inner';\n    if (infoPosition === 'inner' || format || progressStatus !== 'exception' && progressStatus !== 'success') {\n      text = textFormatter(validProgress(percent), validProgress(successPercent));\n    } else if (progressStatus === 'exception') {\n      text = isLineType ? /*#__PURE__*/react.createElement(CloseCircleFilled/* default */.A, null) : /*#__PURE__*/react.createElement(CloseOutlined/* default */.A, null);\n    } else if (progressStatus === 'success') {\n      text = isLineType ? /*#__PURE__*/react.createElement(CheckCircleFilled/* default */.A, null) : /*#__PURE__*/react.createElement(CheckOutlined/* default */.A, null);\n    }\n    return /*#__PURE__*/react.createElement(\"span\", {\n      className: classnames_default()(`${prefixCls}-text`, {\n        [`${prefixCls}-text-bright`]: isBrightInnerColor,\n        [`${prefixCls}-text-${infoAlign}`]: isPureLineType,\n        [`${prefixCls}-text-${infoPosition}`]: isPureLineType\n      }),\n      title: typeof text === 'string' ? text : undefined\n    }, text);\n  }, [showInfo, percent, percentNumber, progressStatus, type, prefixCls, format]);\n  if (false) {}\n  let progress;\n  // Render progress shape\n  if (type === 'line') {\n    progress = steps ? (/*#__PURE__*/react.createElement(progress_Steps, Object.assign({}, props, {\n      strokeColor: strokeColorNotGradient,\n      prefixCls: prefixCls,\n      steps: typeof steps === 'object' ? steps.count : steps\n    }), progressInfo)) : (/*#__PURE__*/react.createElement(progress_Line, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      direction: direction,\n      percentPosition: {\n        align: infoAlign,\n        type: infoPosition\n      }\n    }), progressInfo));\n  } else if (type === 'circle' || type === 'dashboard') {\n    progress = /*#__PURE__*/react.createElement(progress_Circle, Object.assign({}, props, {\n      strokeColor: strokeColorNotArray,\n      prefixCls: prefixCls,\n      progressStatus: progressStatus\n    }), progressInfo);\n  }\n  const classString = classnames_default()(prefixCls, `${prefixCls}-status-${progressStatus}`, {\n    [`${prefixCls}-${type === 'dashboard' && 'circle' || type}`]: type !== 'line',\n    [`${prefixCls}-inline-circle`]: type === 'circle' && getSize(size, 'circle')[0] <= 20,\n    [`${prefixCls}-line`]: isPureLineType,\n    [`${prefixCls}-line-align-${infoAlign}`]: isPureLineType,\n    [`${prefixCls}-line-position-${infoPosition}`]: isPureLineType,\n    [`${prefixCls}-steps`]: steps,\n    [`${prefixCls}-show-info`]: showInfo,\n    [`${prefixCls}-${size}`]: typeof size === 'string',\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, progressStyle === null || progressStyle === void 0 ? void 0 : progressStyle.className, className, rootClassName, hashId, cssVarCls);\n  return wrapCSSVar(/*#__PURE__*/react.createElement(\"div\", Object.assign({\n    ref: ref,\n    style: Object.assign(Object.assign({}, progressStyle === null || progressStyle === void 0 ? void 0 : progressStyle.style), style),\n    className: classString,\n    role: \"progressbar\",\n    \"aria-valuenow\": percentNumber,\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100\n  }, (0,omit/* default */.A)(restProps, ['trailColor', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeLinecap', 'success', 'successPercent'])), progress));\n});\nif (false) {}\n/* harmony default export */ const progress = (Progress);\n;// ./node_modules/antd/es/progress/index.js\n\"use client\";\n\n\n/* harmony default export */ const es_progress = (progress);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6754\n")},21815:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L: () => (/* binding */ changeConfirmLocale),\n/* harmony export */   l: () => (/* binding */ getConfirmLocale)\n/* harmony export */ });\n/* harmony import */ var _locale_en_US__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3078);\n\nlet runtimeLocale = Object.assign({}, _locale_en_US__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.Modal);\nlet localeList = [];\nconst generateLocale = () => localeList.reduce((merged, locale) => Object.assign(Object.assign({}, merged), locale), _locale_en_US__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.Modal);\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    const cloneLocale = Object.assign({}, newLocale);\n    localeList.push(cloneLocale);\n    runtimeLocale = generateLocale();\n    return () => {\n      localeList = localeList.filter(locale => locale !== cloneLocale);\n      runtimeLocale = generateLocale();\n    };\n  }\n  runtimeLocale = Object.assign({}, _locale_en_US__WEBPACK_IMPORTED_MODULE_0__/* ["default"] */ .A.Modal);\n}\nfunction getConfirmLocale() {\n  return runtimeLocale;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjE4MTUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uL25vZGVfbW9kdWxlcy9hbnRkL2VzL21vZGFsL2xvY2FsZS5qcz9iYTVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWZhdWx0TG9jYWxlIGZyb20gJy4uL2xvY2FsZS9lbl9VUyc7XG5sZXQgcnVudGltZUxvY2FsZSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRMb2NhbGUuTW9kYWwpO1xubGV0IGxvY2FsZUxpc3QgPSBbXTtcbmNvbnN0IGdlbmVyYXRlTG9jYWxlID0gKCkgPT4gbG9jYWxlTGlzdC5yZWR1Y2UoKG1lcmdlZCwgbG9jYWxlKSA9PiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1lcmdlZCksIGxvY2FsZSksIGRlZmF1bHRMb2NhbGUuTW9kYWwpO1xuZXhwb3J0IGZ1bmN0aW9uIGNoYW5nZUNvbmZpcm1Mb2NhbGUobmV3TG9jYWxlKSB7XG4gIGlmIChuZXdMb2NhbGUpIHtcbiAgICBjb25zdCBjbG9uZUxvY2FsZSA9IE9iamVjdC5hc3NpZ24oe30sIG5ld0xvY2FsZSk7XG4gICAgbG9jYWxlTGlzdC5wdXNoKGNsb25lTG9jYWxlKTtcbiAgICBydW50aW1lTG9jYWxlID0gZ2VuZXJhdGVMb2NhbGUoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgbG9jYWxlTGlzdCA9IGxvY2FsZUxpc3QuZmlsdGVyKGxvY2FsZSA9PiBsb2NhbGUgIT09IGNsb25lTG9jYWxlKTtcbiAgICAgIHJ1bnRpbWVMb2NhbGUgPSBnZW5lcmF0ZUxvY2FsZSgpO1xuICAgIH07XG4gIH1cbiAgcnVudGltZUxvY2FsZSA9IE9iamVjdC5hc3NpZ24oe30sIGRlZmF1bHRMb2NhbGUuTW9kYWwpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmZpcm1Mb2NhbGUoKSB7XG4gIHJldHVybiBydW50aW1lTG9jYWxlO1xufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///21815\n')},51288:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ useNotification)\n});\n\n// UNUSED EXPORTS: useInternalNotification\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(96540);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(46942);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/rc-notification/es/index.js + 6 modules\nvar es = __webpack_require__(22370);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/warning.js\nvar _util_warning = __webpack_require__(18877);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(62279);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/hooks/useCSSVarCls.js\nvar hooks_useCSSVarCls = __webpack_require__(20934);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/useToken.js + 3 modules\nvar useToken = __webpack_require__(39319);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js + 1 modules\nvar CheckCircleFilled = __webpack_require__(38811);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js + 1 modules\nvar CloseCircleFilled = __webpack_require__(36029);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseOutlined.js + 1 modules\nvar CloseOutlined = __webpack_require__(47852);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js + 1 modules\nvar ExclamationCircleFilled = __webpack_require__(7541);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/InfoCircleFilled.js + 1 modules\nvar InfoCircleFilled = __webpack_require__(17850);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/LoadingOutlined.js + 1 modules\nvar LoadingOutlined = __webpack_require__(93567);\n;// ./node_modules/antd/es/notification/PurePanel.js\n\"use client\";\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst TypeIcon = {\n  info: /*#__PURE__*/react.createElement(InfoCircleFilled/* default */.A, null),\n  success: /*#__PURE__*/react.createElement(CheckCircleFilled/* default */.A, null),\n  error: /*#__PURE__*/react.createElement(CloseCircleFilled/* default */.A, null),\n  warning: /*#__PURE__*/react.createElement(ExclamationCircleFilled/* default */.A, null),\n  loading: /*#__PURE__*/react.createElement(LoadingOutlined/* default */.A, null)\n};\nfunction getCloseIcon(prefixCls, closeIcon) {\n  if (closeIcon === null || closeIcon === false) {\n    return null;\n  }\n  return closeIcon || /*#__PURE__*/react.createElement(CloseOutlined/* default */.A, {\n    className: `${prefixCls}-close-icon`\n  });\n}\nconst typeToIcon = {\n  success: CheckCircleFilled/* default */.A,\n  info: InfoCircleFilled/* default */.A,\n  error: CloseCircleFilled/* default */.A,\n  warning: ExclamationCircleFilled/* default */.A\n};\nconst PureContent = props => {\n  const {\n    prefixCls,\n    icon,\n    type,\n    message,\n    description,\n    actions,\n    role = 'alert'\n  } = props;\n  let iconNode = null;\n  if (icon) {\n    iconNode = /*#__PURE__*/react.createElement(\"span\", {\n      className: `${prefixCls}-icon`\n    }, icon);\n  } else if (type) {\n    iconNode = /*#__PURE__*/react.createElement(typeToIcon[type] || null, {\n      className: classnames_default()(`${prefixCls}-icon`, `${prefixCls}-icon-${type}`)\n    });\n  }\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: classnames_default()({\n      [`${prefixCls}-with-icon`]: iconNode\n    }),\n    role: role\n  }, iconNode, /*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-message`\n  }, message), /*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-description`\n  }, description), actions && /*#__PURE__*/react.createElement(\"div\", {\n    className: `${prefixCls}-actions`\n  }, actions));\n};\n/** @private Internal Component. Do not use in your production. */\nconst PurePanel = props => {\n  const {\n      prefixCls: staticPrefixCls,\n      className,\n      icon,\n      type,\n      message,\n      description,\n      btn,\n      actions,\n      closable = true,\n      closeIcon,\n      className: notificationClassName\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"icon\", \"type\", \"message\", \"description\", \"btn\", \"actions\", \"closable\", \"closeIcon\", \"className\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const mergedActions = actions !== null && actions !== void 0 ? actions : btn;\n  if (false) {}\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  const noticePrefixCls = `${prefixCls}-notice`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${noticePrefixCls}-pure-panel`, hashId, className, cssVarCls, rootCls)\n  }, /*#__PURE__*/React.createElement(PurePanelStyle, {\n    prefixCls: prefixCls\n  }), /*#__PURE__*/React.createElement(Notice, Object.assign({}, restProps, {\n    prefixCls: prefixCls,\n    eventKey: \"pure\",\n    duration: null,\n    closable: closable,\n    className: classNames({\n      notificationClassName\n    }),\n    closeIcon: getCloseIcon(prefixCls, closeIcon),\n    content: /*#__PURE__*/React.createElement(PureContent, {\n      prefixCls: noticePrefixCls,\n      icon: icon,\n      type: type,\n      message: message,\n      description: description,\n      actions: mergedActions\n    })\n  }))));\n};\n/* harmony default export */ const notification_PurePanel = ((/* unused pure expression or super */ null && (PurePanel)));\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs/es/index.js + 30 modules\nvar cssinjs_es = __webpack_require__(67466);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/hooks/useZIndex.js\nvar useZIndex = __webpack_require__(60275);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/index.js\nvar style = __webpack_require__(25905);\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs-utils/es/index.js + 12 modules\nvar cssinjs_utils_es = __webpack_require__(14277);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/util/genStyleUtils.js\nvar genStyleUtils = __webpack_require__(37358);\n;// ./node_modules/antd/es/notification/style/placement.js\n\nconst genNotificationPlacementStyle = token => {\n  const {\n    componentCls,\n    notificationMarginEdge,\n    animationMaxHeight\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const rightFadeIn = new cssinjs_es/* Keyframes */.Mo('antNotificationFadeIn', {\n    '0%': {\n      transform: `translate3d(100%, 0, 0)`,\n      opacity: 0\n    },\n    '100%': {\n      transform: `translate3d(0, 0, 0)`,\n      opacity: 1\n    }\n  });\n  const topFadeIn = new cssinjs_es/* Keyframes */.Mo('antNotificationTopFadeIn', {\n    '0%': {\n      top: -animationMaxHeight,\n      opacity: 0\n    },\n    '100%': {\n      top: 0,\n      opacity: 1\n    }\n  });\n  const bottomFadeIn = new cssinjs_es/* Keyframes */.Mo('antNotificationBottomFadeIn', {\n    '0%': {\n      bottom: token.calc(animationMaxHeight).mul(-1).equal(),\n      opacity: 0\n    },\n    '100%': {\n      bottom: 0,\n      opacity: 1\n    }\n  });\n  const leftFadeIn = new cssinjs_es/* Keyframes */.Mo('antNotificationLeftFadeIn', {\n    '0%': {\n      transform: `translate3d(-100%, 0, 0)`,\n      opacity: 0\n    },\n    '100%': {\n      transform: `translate3d(0, 0, 0)`,\n      opacity: 1\n    }\n  });\n  return {\n    [componentCls]: {\n      [`&${componentCls}-top, &${componentCls}-bottom`]: {\n        marginInline: 0,\n        [noticeCls]: {\n          marginInline: 'auto auto'\n        }\n      },\n      [`&${componentCls}-top`]: {\n        [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n          animationName: topFadeIn\n        }\n      },\n      [`&${componentCls}-bottom`]: {\n        [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n          animationName: bottomFadeIn\n        }\n      },\n      [`&${componentCls}-topRight, &${componentCls}-bottomRight`]: {\n        [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n          animationName: rightFadeIn\n        }\n      },\n      [`&${componentCls}-topLeft, &${componentCls}-bottomLeft`]: {\n        marginRight: {\n          value: 0,\n          _skip_check_: true\n        },\n        marginLeft: {\n          value: notificationMarginEdge,\n          _skip_check_: true\n        },\n        [noticeCls]: {\n          marginInlineEnd: 'auto',\n          marginInlineStart: 0\n        },\n        [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n          animationName: leftFadeIn\n        }\n      }\n    }\n  };\n};\n/* harmony default export */ const placement = (genNotificationPlacementStyle);\n;// ./node_modules/antd/es/notification/interface.js\nconst NotificationPlacements = ['top', 'topLeft', 'topRight', 'bottom', 'bottomLeft', 'bottomRight'];\n;// ./node_modules/antd/es/notification/style/stack.js\n\nconst placementAlignProperty = {\n  topLeft: 'left',\n  topRight: 'right',\n  bottomLeft: 'left',\n  bottomRight: 'right',\n  top: 'left',\n  bottom: 'left'\n};\nconst genPlacementStackStyle = (token, placement) => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-${placement}`]: {\n      [`&${componentCls}-stack > ${componentCls}-notice-wrapper`]: {\n        [placement.startsWith('top') ? 'top' : 'bottom']: 0,\n        [placementAlignProperty[placement]]: {\n          value: 0,\n          _skip_check_: true\n        }\n      }\n    }\n  };\n};\nconst genStackChildrenStyle = token => {\n  const childrenStyle = {};\n  for (let i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[`&:nth-last-child(${i + 1})`] = {\n      overflow: 'hidden',\n      [`& > ${token.componentCls}-notice`]: {\n        opacity: 0,\n        transition: `opacity ${token.motionDurationMid}`\n      }\n    };\n  }\n  return Object.assign({\n    [`&:not(:nth-last-child(-n+${token.notificationStackLayer}))`]: {\n      opacity: 0,\n      overflow: 'hidden',\n      color: 'transparent',\n      pointerEvents: 'none'\n    }\n  }, childrenStyle);\n};\nconst genStackedNoticeStyle = token => {\n  const childrenStyle = {};\n  for (let i = 1; i < token.notificationStackLayer; i++) {\n    childrenStyle[`&:nth-last-child(${i + 1})`] = {\n      background: token.colorBgBlur,\n      backdropFilter: 'blur(10px)',\n      '-webkit-backdrop-filter': 'blur(10px)'\n    };\n  }\n  return Object.assign({}, childrenStyle);\n};\nconst genStackStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return Object.assign({\n    [`${componentCls}-stack`]: {\n      [`& > ${componentCls}-notice-wrapper`]: Object.assign({\n        transition: `transform ${token.motionDurationSlow}, backdrop-filter 0s`,\n        willChange: 'transform, opacity',\n        position: 'absolute'\n      }, genStackChildrenStyle(token))\n    },\n    [`${componentCls}-stack:not(${componentCls}-stack-expanded)`]: {\n      [`& > ${componentCls}-notice-wrapper`]: Object.assign({}, genStackedNoticeStyle(token))\n    },\n    [`${componentCls}-stack${componentCls}-stack-expanded`]: {\n      [`& > ${componentCls}-notice-wrapper`]: {\n        '&:not(:nth-last-child(-n + 1))': {\n          opacity: 1,\n          overflow: 'unset',\n          color: 'inherit',\n          pointerEvents: 'auto',\n          [`& > ${token.componentCls}-notice`]: {\n            opacity: 1\n          }\n        },\n        '&:after': {\n          content: '\"\"',\n          position: 'absolute',\n          height: token.margin,\n          width: '100%',\n          insetInline: 0,\n          bottom: token.calc(token.margin).mul(-1).equal(),\n          background: 'transparent',\n          pointerEvents: 'auto'\n        }\n      }\n    }\n  }, NotificationPlacements.map(placement => genPlacementStackStyle(token, placement)).reduce((acc, cur) => Object.assign(Object.assign({}, acc), cur), {}));\n};\n/* harmony default export */ const stack = (genStackStyle);\n;// ./node_modules/antd/es/notification/style/index.js\n\n\n\n\n\n\nconst genNoticeStyle = token => {\n  const {\n    iconCls,\n    componentCls,\n    // .ant-notification\n    boxShadow,\n    fontSizeLG,\n    notificationMarginBottom,\n    borderRadiusLG,\n    colorSuccess,\n    colorInfo,\n    colorWarning,\n    colorError,\n    colorTextHeading,\n    notificationBg,\n    notificationPadding,\n    notificationMarginEdge,\n    notificationProgressBg,\n    notificationProgressHeight,\n    fontSize,\n    lineHeight,\n    width,\n    notificationIconSize,\n    colorText\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  return {\n    position: 'relative',\n    marginBottom: notificationMarginBottom,\n    marginInlineStart: 'auto',\n    background: notificationBg,\n    borderRadius: borderRadiusLG,\n    boxShadow,\n    [noticeCls]: {\n      padding: notificationPadding,\n      width,\n      maxWidth: `calc(100vw - ${(0,cssinjs_es/* unit */.zA)(token.calc(notificationMarginEdge).mul(2).equal())})`,\n      overflow: 'hidden',\n      lineHeight,\n      wordWrap: 'break-word'\n    },\n    [`${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      color: colorTextHeading,\n      fontSize: fontSizeLG,\n      lineHeight: token.lineHeightLG\n    },\n    [`${noticeCls}-description`]: {\n      fontSize,\n      color: colorText\n    },\n    [`${noticeCls}-closable ${noticeCls}-message`]: {\n      paddingInlineEnd: token.paddingLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-message`]: {\n      marginBottom: token.marginXS,\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize: fontSizeLG\n    },\n    [`${noticeCls}-with-icon ${noticeCls}-description`]: {\n      marginInlineStart: token.calc(token.marginSM).add(notificationIconSize).equal(),\n      fontSize\n    },\n    // Icon & color style in different selector level\n    // https://github.com/ant-design/ant-design/issues/16503\n    // https://github.com/ant-design/ant-design/issues/15512\n    [`${noticeCls}-icon`]: {\n      position: 'absolute',\n      fontSize: notificationIconSize,\n      lineHeight: 1,\n      // icon-font\n      [`&-success${iconCls}`]: {\n        color: colorSuccess\n      },\n      [`&-info${iconCls}`]: {\n        color: colorInfo\n      },\n      [`&-warning${iconCls}`]: {\n        color: colorWarning\n      },\n      [`&-error${iconCls}`]: {\n        color: colorError\n      }\n    },\n    [`${noticeCls}-close`]: Object.assign({\n      position: 'absolute',\n      top: token.notificationPaddingVertical,\n      insetInlineEnd: token.notificationPaddingHorizontal,\n      color: token.colorIcon,\n      outline: 'none',\n      width: token.notificationCloseButtonSize,\n      height: token.notificationCloseButtonSize,\n      borderRadius: token.borderRadiusSM,\n      transition: `background-color ${token.motionDurationMid}, color ${token.motionDurationMid}`,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: 'none',\n      border: 'none',\n      '&:hover': {\n        color: token.colorIconHover,\n        backgroundColor: token.colorBgTextHover\n      },\n      '&:active': {\n        backgroundColor: token.colorBgTextActive\n      }\n    }, (0,style/* genFocusStyle */.K8)(token)),\n    [`${noticeCls}-progress`]: {\n      position: 'absolute',\n      display: 'block',\n      appearance: 'none',\n      inlineSize: `calc(100% - ${(0,cssinjs_es/* unit */.zA)(borderRadiusLG)} * 2)`,\n      left: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      right: {\n        _skip_check_: true,\n        value: borderRadiusLG\n      },\n      bottom: 0,\n      blockSize: notificationProgressHeight,\n      border: 0,\n      '&, &::-webkit-progress-bar': {\n        borderRadius: borderRadiusLG,\n        backgroundColor: `rgba(0, 0, 0, 0.04)`\n      },\n      '&::-moz-progress-bar': {\n        background: notificationProgressBg\n      },\n      '&::-webkit-progress-value': {\n        borderRadius: borderRadiusLG,\n        background: notificationProgressBg\n      }\n    },\n    [`${noticeCls}-actions`]: {\n      float: 'right',\n      marginTop: token.marginSM\n    }\n  };\n};\nconst genNotificationStyle = token => {\n  const {\n    componentCls,\n    // .ant-notification\n    notificationMarginBottom,\n    notificationMarginEdge,\n    motionDurationMid,\n    motionEaseInOut\n  } = token;\n  const noticeCls = `${componentCls}-notice`;\n  const fadeOut = new cssinjs_es/* Keyframes */.Mo('antNotificationFadeOut', {\n    '0%': {\n      maxHeight: token.animationMaxHeight,\n      marginBottom: notificationMarginBottom\n    },\n    '100%': {\n      maxHeight: 0,\n      marginBottom: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      opacity: 0\n    }\n  });\n  return [\n  // ============================ Holder ============================\n  {\n    [componentCls]: Object.assign(Object.assign({}, (0,style/* resetComponent */.dF)(token)), {\n      position: 'fixed',\n      zIndex: token.zIndexPopup,\n      marginRight: {\n        value: notificationMarginEdge,\n        _skip_check_: true\n      },\n      [`${componentCls}-hook-holder`]: {\n        position: 'relative'\n      },\n      //  animation\n      [`${componentCls}-fade-appear-prepare`]: {\n        opacity: '0 !important'\n      },\n      [`${componentCls}-fade-enter, ${componentCls}-fade-appear`]: {\n        animationDuration: token.motionDurationMid,\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        opacity: 0,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-leave`]: {\n        animationTimingFunction: motionEaseInOut,\n        animationFillMode: 'both',\n        animationDuration: motionDurationMid,\n        animationPlayState: 'paused'\n      },\n      [`${componentCls}-fade-enter${componentCls}-fade-enter-active, ${componentCls}-fade-appear${componentCls}-fade-appear-active`]: {\n        animationPlayState: 'running'\n      },\n      [`${componentCls}-fade-leave${componentCls}-fade-leave-active`]: {\n        animationName: fadeOut,\n        animationPlayState: 'running'\n      },\n      // RTL\n      '&-rtl': {\n        direction: 'rtl',\n        [`${noticeCls}-actions`]: {\n          float: 'left'\n        }\n      }\n    })\n  },\n  // ============================ Notice ============================\n  {\n    [componentCls]: {\n      [`${noticeCls}-wrapper`]: Object.assign({}, genNoticeStyle(token))\n    }\n  }];\n};\n// ============================== Export ==============================\nconst prepareComponentToken = token => ({\n  zIndexPopup: token.zIndexPopupBase + useZIndex/* CONTAINER_MAX_OFFSET */.jH + 50,\n  width: 384\n});\nconst prepareNotificationToken = token => {\n  const notificationPaddingVertical = token.paddingMD;\n  const notificationPaddingHorizontal = token.paddingLG;\n  const notificationToken = (0,cssinjs_utils_es/* mergeToken */.oX)(token, {\n    notificationBg: token.colorBgElevated,\n    notificationPaddingVertical,\n    notificationPaddingHorizontal,\n    notificationIconSize: token.calc(token.fontSizeLG).mul(token.lineHeightLG).equal(),\n    notificationCloseButtonSize: token.calc(token.controlHeightLG).mul(0.55).equal(),\n    notificationMarginBottom: token.margin,\n    notificationPadding: `${(0,cssinjs_es/* unit */.zA)(token.paddingMD)} ${(0,cssinjs_es/* unit */.zA)(token.paddingContentHorizontalLG)}`,\n    notificationMarginEdge: token.marginLG,\n    animationMaxHeight: 150,\n    notificationStackLayer: 3,\n    notificationProgressHeight: 2,\n    notificationProgressBg: `linear-gradient(90deg, ${token.colorPrimaryBorderHover}, ${token.colorPrimary})`\n  });\n  return notificationToken;\n};\n/* harmony default export */ const notification_style = ((0,genStyleUtils/* genStyleHooks */.OF)('Notification', token => {\n  const notificationToken = prepareNotificationToken(token);\n  return [genNotificationStyle(notificationToken), placement(notificationToken), stack(notificationToken)];\n}, prepareComponentToken));\n;// ./node_modules/antd/es/notification/util.js\nfunction getPlacementStyle(placement, top, bottom) {\n  let style;\n  switch (placement) {\n    case 'top':\n      style = {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        right: 'auto',\n        top,\n        bottom: 'auto'\n      };\n      break;\n    case 'topLeft':\n      style = {\n        left: 0,\n        top,\n        bottom: 'auto'\n      };\n      break;\n    case 'topRight':\n      style = {\n        right: 0,\n        top,\n        bottom: 'auto'\n      };\n      break;\n    case 'bottom':\n      style = {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        right: 'auto',\n        top: 'auto',\n        bottom\n      };\n      break;\n    case 'bottomLeft':\n      style = {\n        left: 0,\n        top: 'auto',\n        bottom\n      };\n      break;\n    default:\n      style = {\n        right: 0,\n        top: 'auto',\n        bottom\n      };\n      break;\n  }\n  return style;\n}\nfunction getMotion(prefixCls) {\n  return {\n    motionName: `${prefixCls}-fade`\n  };\n}\nfunction getCloseIconConfig(closeIcon, notificationConfig, notification) {\n  if (typeof closeIcon !== 'undefined') {\n    return closeIcon;\n  }\n  if (typeof (notificationConfig === null || notificationConfig === void 0 ? void 0 : notificationConfig.closeIcon) !== 'undefined') {\n    return notificationConfig.closeIcon;\n  }\n  return notification === null || notification === void 0 ? void 0 : notification.closeIcon;\n}\n;// ./node_modules/antd/es/notification/useNotification.js\n\"use client\";\n\nvar useNotification_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_OFFSET = 24;\nconst DEFAULT_DURATION = 4.5;\nconst DEFAULT_PLACEMENT = 'topRight';\nconst Wrapper = _ref => {\n  let {\n    children,\n    prefixCls\n  } = _ref;\n  const rootCls = (0,hooks_useCSSVarCls/* default */.A)(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = notification_style(prefixCls, rootCls);\n  return wrapCSSVar(/*#__PURE__*/react.createElement(es/* NotificationProvider */.ph, {\n    classNames: {\n      list: classnames_default()(hashId, cssVarCls, rootCls)\n    }\n  }, children));\n};\nconst renderNotifications = (node, _ref2) => {\n  let {\n    prefixCls,\n    key\n  } = _ref2;\n  return /*#__PURE__*/react.createElement(Wrapper, {\n    prefixCls: prefixCls,\n    key: key\n  }, node);\n};\nconst Holder = /*#__PURE__*/react.forwardRef((props, ref) => {\n  const {\n    top,\n    bottom,\n    prefixCls: staticPrefixCls,\n    getContainer: staticGetContainer,\n    maxCount,\n    rtl,\n    onAllRemoved,\n    stack,\n    duration,\n    pauseOnHover = true,\n    showProgress\n  } = props;\n  const {\n    getPrefixCls,\n    getPopupContainer,\n    notification,\n    direction\n  } = (0,react.useContext)(context/* ConfigContext */.QO);\n  const [, token] = (0,useToken/* default */.Ay)();\n  const prefixCls = staticPrefixCls || getPrefixCls('notification');\n  // =============================== Style ===============================\n  const getStyle = placement => getPlacementStyle(placement, top !== null && top !== void 0 ? top : DEFAULT_OFFSET, bottom !== null && bottom !== void 0 ? bottom : DEFAULT_OFFSET);\n  const getClassName = () => classnames_default()({\n    [`${prefixCls}-rtl`]: rtl !== null && rtl !== void 0 ? rtl : direction === 'rtl'\n  });\n  // ============================== Motion ===============================\n  const getNotificationMotion = () => getMotion(prefixCls);\n  // ============================== Origin ===============================\n  const [api, holder] = (0,es/* useNotification */.hN)({\n    prefixCls,\n    style: getStyle,\n    className: getClassName,\n    motion: getNotificationMotion,\n    closable: true,\n    closeIcon: getCloseIcon(prefixCls),\n    duration: duration !== null && duration !== void 0 ? duration : DEFAULT_DURATION,\n    getContainer: () => (staticGetContainer === null || staticGetContainer === void 0 ? void 0 : staticGetContainer()) || (getPopupContainer === null || getPopupContainer === void 0 ? void 0 : getPopupContainer()) || document.body,\n    maxCount,\n    pauseOnHover,\n    showProgress,\n    onAllRemoved,\n    renderNotifications,\n    stack: stack === false ? false : {\n      threshold: typeof stack === 'object' ? stack === null || stack === void 0 ? void 0 : stack.threshold : undefined,\n      offset: 8,\n      gap: token.margin\n    }\n  });\n  // ================================ Ref ================================\n  react.useImperativeHandle(ref, () => Object.assign(Object.assign({}, api), {\n    prefixCls,\n    notification\n  }));\n  return holder;\n});\n// ==============================================================================\n// ==                                   Hook                                   ==\n// ==============================================================================\nfunction useInternalNotification(notificationConfig) {\n  const holderRef = react.useRef(null);\n  const warning = (0,_util_warning/* devUseWarning */.rJ)('Notification');\n  // ================================ API ================================\n  const wrapAPI = react.useMemo(() => {\n    // Wrap with notification content\n    // >>> Open\n    const open = config => {\n      var _a;\n      if (!holderRef.current) {\n         false ? 0 : void 0;\n        return;\n      }\n      const {\n        open: originOpen,\n        prefixCls,\n        notification\n      } = holderRef.current;\n      const noticePrefixCls = `${prefixCls}-notice`;\n      const {\n          message,\n          description,\n          icon,\n          type,\n          btn,\n          actions,\n          className,\n          style,\n          role = 'alert',\n          closeIcon,\n          closable\n        } = config,\n        restConfig = useNotification_rest(config, [\"message\", \"description\", \"icon\", \"type\", \"btn\", \"actions\", \"className\", \"style\", \"role\", \"closeIcon\", \"closable\"]);\n      if (false) {}\n      const mergedActions = actions !== null && actions !== void 0 ? actions : btn;\n      const realCloseIcon = getCloseIcon(noticePrefixCls, getCloseIconConfig(closeIcon, notificationConfig, notification));\n      return originOpen(Object.assign(Object.assign({\n        // use placement from props instead of hard-coding \"topRight\"\n        placement: (_a = notificationConfig === null || notificationConfig === void 0 ? void 0 : notificationConfig.placement) !== null && _a !== void 0 ? _a : DEFAULT_PLACEMENT\n      }, restConfig), {\n        content: (/*#__PURE__*/react.createElement(PureContent, {\n          prefixCls: noticePrefixCls,\n          icon: icon,\n          type: type,\n          message: message,\n          description: description,\n          actions: mergedActions,\n          role: role\n        })),\n        className: classnames_default()(type && `${noticePrefixCls}-${type}`, className, notification === null || notification === void 0 ? void 0 : notification.className),\n        style: Object.assign(Object.assign({}, notification === null || notification === void 0 ? void 0 : notification.style), style),\n        closeIcon: realCloseIcon,\n        closable: closable !== null && closable !== void 0 ? closable : !!realCloseIcon\n      }));\n    };\n    // >>> destroy\n    const destroy = key => {\n      var _a, _b;\n      if (key !== undefined) {\n        (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.close(key);\n      } else {\n        (_b = holderRef.current) === null || _b === void 0 ? void 0 : _b.destroy();\n      }\n    };\n    const clone = {\n      open,\n      destroy\n    };\n    const keys = ['success', 'info', 'warning', 'error'];\n    keys.forEach(type => {\n      clone[type] = config => open(Object.assign(Object.assign({}, config), {\n        type\n      }));\n    });\n    return clone;\n  }, []);\n  // ============================== Return ===============================\n  return [wrapAPI, /*#__PURE__*/react.createElement(Holder, Object.assign({\n    key: \"notification-holder\"\n  }, notificationConfig, {\n    ref: holderRef\n  }))];\n}\nfunction useNotification(notificationConfig) {\n  return useInternalNotification(notificationConfig);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///51288\n")},94691:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  A: () => (/* binding */ modal_useModal)\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 2 modules\nvar toConsumableArray = __webpack_require__(60436);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(96540);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/hooks/usePatchElement.js\nvar usePatchElement = __webpack_require__(16799);\n;// ./node_modules/antd/es/modal/confirm.js\n\"use client\";\n\n\n\n\n\n\n\n\n\nlet defaultRootPrefixCls = '';\nfunction getRootPrefixCls() {\n  return defaultRootPrefixCls;\n}\nconst ConfirmDialogWrapper = props => {\n  var _a, _b;\n  const {\n    prefixCls: customizePrefixCls,\n    getContainer,\n    direction\n  } = props;\n  const runtimeLocale = getConfirmLocale();\n  const config = useContext(ConfigContext);\n  const rootPrefixCls = getRootPrefixCls() || config.getPrefixCls();\n  // because Modal.config set rootPrefixCls, which is different from other components\n  const prefixCls = customizePrefixCls || `${rootPrefixCls}-modal`;\n  let mergedGetContainer = getContainer;\n  if (mergedGetContainer === false) {\n    mergedGetContainer = undefined;\n    if (false) {}\n  }\n  return /*#__PURE__*/React.createElement(ConfirmDialog, Object.assign({}, props, {\n    rootPrefixCls: rootPrefixCls,\n    prefixCls: prefixCls,\n    iconPrefixCls: config.iconPrefixCls,\n    theme: config.theme,\n    direction: direction !== null && direction !== void 0 ? direction : config.direction,\n    locale: (_b = (_a = config.locale) === null || _a === void 0 ? void 0 : _a.Modal) !== null && _b !== void 0 ? _b : runtimeLocale,\n    getContainer: mergedGetContainer\n  }));\n};\nfunction confirm_confirm(config) {\n  const global = globalConfig();\n  if (false) {}\n  const container = document.createDocumentFragment();\n  let currentConfig = Object.assign(Object.assign({}, config), {\n    close,\n    open: true\n  });\n  let timeoutId;\n  let reactUnmount;\n  function destroy() {\n    var _a;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = config.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [config, () => {}].concat(_toConsumableArray(args.slice(1))));\n    }\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n    reactUnmount();\n  }\n  function render(props) {\n    clearTimeout(timeoutId);\n    /**\n     * https://github.com/ant-design/ant-design/issues/23623\n     *\n     * Sync render blocks React event. Let's make this async.\n     */\n    timeoutId = setTimeout(() => {\n      const rootPrefixCls = global.getPrefixCls(undefined, getRootPrefixCls());\n      const iconPrefixCls = global.getIconPrefixCls();\n      const theme = global.getTheme();\n      const dom = /*#__PURE__*/React.createElement(ConfirmDialogWrapper, Object.assign({}, props));\n      const reactRender = getReactRender();\n      reactUnmount = reactRender(/*#__PURE__*/React.createElement(ConfigProvider, {\n        prefixCls: rootPrefixCls,\n        iconPrefixCls: iconPrefixCls,\n        theme: theme\n      }, global.holderRender ? global.holderRender(dom) : dom), container);\n    });\n  }\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = Object.assign(Object.assign({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        // @ts-ignore\n        destroy.apply(this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    render(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = Object.assign(Object.assign({}, currentConfig), configUpdate);\n    }\n    render(currentConfig);\n  }\n  render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n}\nfunction withWarn(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'warning'\n  });\n}\nfunction withInfo(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'info'\n  });\n}\nfunction withSuccess(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'success'\n  });\n}\nfunction withError(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'error'\n  });\n}\nfunction withConfirm(props) {\n  return Object.assign(Object.assign({}, props), {\n    type: 'confirm'\n  });\n}\nfunction modalGlobalConfig(_ref) {\n  let {\n    rootPrefixCls\n  } = _ref;\n   false ? 0 : void 0;\n  defaultRootPrefixCls = rootPrefixCls;\n}\n;// ./node_modules/antd/es/modal/destroyFns.js\nconst destroyFns_destroyFns = [];\n/* harmony default export */ const modal_destroyFns = (destroyFns_destroyFns);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/context.js\nvar context = __webpack_require__(62279);\n// EXTERNAL MODULE: ./node_modules/antd/es/locale/en_US.js + 2 modules\nvar en_US = __webpack_require__(3078);\n// EXTERNAL MODULE: ./node_modules/antd/es/locale/useLocale.js\nvar useLocale = __webpack_require__(19155);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js + 1 modules\nvar CheckCircleFilled = __webpack_require__(38811);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseCircleFilled.js + 1 modules\nvar CloseCircleFilled = __webpack_require__(36029);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js + 1 modules\nvar ExclamationCircleFilled = __webpack_require__(7541);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/InfoCircleFilled.js + 1 modules\nvar InfoCircleFilled = __webpack_require__(17850);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(46942);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/hooks/useZIndex.js\nvar useZIndex = __webpack_require__(60275);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/motion.js\nvar motion = __webpack_require__(23723);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/index.js + 8 modules\nvar config_provider = __webpack_require__(78407);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/useToken.js + 3 modules\nvar useToken = __webpack_require__(39319);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/ActionButton.js\nvar ActionButton = __webpack_require__(58431);\n;// ./node_modules/antd/es/modal/context.js\n\nconst ModalContext = /*#__PURE__*/react.createContext({});\nconst {\n  Provider: ModalContextProvider\n} = ModalContext;\n;// ./node_modules/antd/es/modal/components/ConfirmCancelBtn.js\n\"use client\";\n\n\n\n\nconst ConfirmCancelBtn = () => {\n  const {\n    autoFocusButton,\n    cancelButtonProps,\n    cancelTextLocale,\n    isSilent,\n    mergedOkCancel,\n    rootPrefixCls,\n    close,\n    onCancel,\n    onConfirm\n  } = (0,react.useContext)(ModalContext);\n  return mergedOkCancel ? (/*#__PURE__*/react.createElement(ActionButton/* default */.A, {\n    isSilent: isSilent,\n    actionFn: onCancel,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    autoFocus: autoFocusButton === 'cancel',\n    buttonProps: cancelButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, cancelTextLocale)) : null;\n};\n/* harmony default export */ const components_ConfirmCancelBtn = (ConfirmCancelBtn);\n;// ./node_modules/antd/es/modal/components/ConfirmOkBtn.js\n\"use client\";\n\n\n\n\nconst ConfirmOkBtn = () => {\n  const {\n    autoFocusButton,\n    close,\n    isSilent,\n    okButtonProps,\n    rootPrefixCls,\n    okTextLocale,\n    okType,\n    onConfirm,\n    onOk\n  } = (0,react.useContext)(ModalContext);\n  return /*#__PURE__*/react.createElement(ActionButton/* default */.A, {\n    isSilent: isSilent,\n    type: okType || 'primary',\n    actionFn: onOk,\n    close: function () {\n      close === null || close === void 0 ? void 0 : close.apply(void 0, arguments);\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(true);\n    },\n    autoFocus: autoFocusButton === 'ok',\n    buttonProps: okButtonProps,\n    prefixCls: `${rootPrefixCls}-btn`\n  }, okTextLocale);\n};\n/* harmony default export */ const components_ConfirmOkBtn = (ConfirmOkBtn);\n// EXTERNAL MODULE: ./node_modules/@ant-design/icons/es/icons/CloseOutlined.js + 1 modules\nvar CloseOutlined = __webpack_require__(47852);\n// EXTERNAL MODULE: ./node_modules/rc-dialog/es/index.js + 8 modules\nvar es = __webpack_require__(33766);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/ContextIsolator.js\nvar ContextIsolator = __webpack_require__(62897);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/hooks/useClosable.js\nvar useClosable = __webpack_require__(70064);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/styleChecker.js\nvar styleChecker = __webpack_require__(75945);\n// EXTERNAL MODULE: ./node_modules/antd/es/_util/zindexContext.js\nvar zindexContext = __webpack_require__(72616);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/hooks/useCSSVarCls.js\nvar useCSSVarCls = __webpack_require__(20934);\n// EXTERNAL MODULE: ./node_modules/antd/es/skeleton/index.js + 10 modules\nvar skeleton = __webpack_require__(97072);\n// EXTERNAL MODULE: ./node_modules/antd/es/watermark/context.js\nvar watermark_context = __webpack_require__(28557);\n// EXTERNAL MODULE: ./node_modules/antd/es/config-provider/DisabledContext.js\nvar DisabledContext = __webpack_require__(98119);\n// EXTERNAL MODULE: ./node_modules/antd/es/button/index.js + 11 modules\nvar es_button = __webpack_require__(32365);\n;// ./node_modules/antd/es/modal/components/NormalCancelBtn.js\n\"use client\";\n\n\n\n\nconst NormalCancelBtn = () => {\n  const {\n    cancelButtonProps,\n    cancelTextLocale,\n    onCancel\n  } = (0,react.useContext)(ModalContext);\n  return /*#__PURE__*/react.createElement(es_button/* default */.Ay, Object.assign({\n    onClick: onCancel\n  }, cancelButtonProps), cancelTextLocale);\n};\n/* harmony default export */ const components_NormalCancelBtn = (NormalCancelBtn);\n// EXTERNAL MODULE: ./node_modules/antd/es/button/buttonHelpers.js\nvar buttonHelpers = __webpack_require__(39449);\n;// ./node_modules/antd/es/modal/components/NormalOkBtn.js\n\"use client\";\n\n\n\n\n\nconst NormalOkBtn = () => {\n  const {\n    confirmLoading,\n    okButtonProps,\n    okType,\n    okTextLocale,\n    onOk\n  } = (0,react.useContext)(ModalContext);\n  return /*#__PURE__*/react.createElement(es_button/* default */.Ay, Object.assign({}, (0,buttonHelpers/* convertLegacyProps */.DU)(okType), {\n    loading: confirmLoading,\n    onClick: onOk\n  }, okButtonProps), okTextLocale);\n};\n/* harmony default export */ const components_NormalOkBtn = (NormalOkBtn);\n// EXTERNAL MODULE: ./node_modules/antd/es/modal/locale.js\nvar modal_locale = __webpack_require__(21815);\n;// ./node_modules/antd/es/modal/shared.js\n\"use client\";\n\n\n\n\n\n\n\n\n\n\nfunction renderCloseIcon(prefixCls, closeIcon) {\n  return /*#__PURE__*/react.createElement(\"span\", {\n    className: `${prefixCls}-close-x`\n  }, closeIcon || /*#__PURE__*/react.createElement(CloseOutlined/* default */.A, {\n    className: `${prefixCls}-close-icon`\n  }));\n}\nconst Footer = props => {\n  const {\n    okText,\n    okType = 'primary',\n    cancelText,\n    confirmLoading,\n    onOk,\n    onCancel,\n    okButtonProps,\n    cancelButtonProps,\n    footer\n  } = props;\n  const [locale] = (0,useLocale/* default */.A)('Modal', (0,modal_locale/* getConfirmLocale */.l)());\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (locale === null || locale === void 0 ? void 0 : locale.okText);\n  const cancelTextLocale = cancelText || (locale === null || locale === void 0 ? void 0 : locale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = {\n    confirmLoading,\n    okButtonProps,\n    cancelButtonProps,\n    okTextLocale,\n    cancelTextLocale,\n    okType,\n    onOk,\n    onCancel\n  };\n  const btnCtxValueMemo = react.useMemo(() => btnCtxValue, (0,toConsumableArray/* default */.A)(Object.values(btnCtxValue)));\n  let footerNode;\n  if (typeof footer === 'function' || typeof footer === 'undefined') {\n    footerNode = /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_NormalCancelBtn, null), /*#__PURE__*/react.createElement(components_NormalOkBtn, null));\n    if (typeof footer === 'function') {\n      footerNode = footer(footerNode, {\n        OkBtn: components_NormalOkBtn,\n        CancelBtn: components_NormalCancelBtn\n      });\n    }\n    footerNode = /*#__PURE__*/react.createElement(ModalContextProvider, {\n      value: btnCtxValueMemo\n    }, footerNode);\n  } else {\n    footerNode = footer;\n  }\n  return /*#__PURE__*/react.createElement(DisabledContext/* DisabledContextProvider */.X, {\n    disabled: false\n  }, footerNode);\n};\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs/es/index.js + 30 modules\nvar cssinjs_es = __webpack_require__(67466);\n// EXTERNAL MODULE: ./node_modules/antd/es/grid/style/index.js\nvar style = __webpack_require__(25006);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/index.js\nvar es_style = __webpack_require__(25905);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/motion/fade.js\nvar fade = __webpack_require__(28680);\n// EXTERNAL MODULE: ./node_modules/antd/es/style/motion/zoom.js\nvar zoom = __webpack_require__(99077);\n// EXTERNAL MODULE: ./node_modules/@ant-design/cssinjs-utils/es/index.js + 12 modules\nvar cssinjs_utils_es = __webpack_require__(14277);\n// EXTERNAL MODULE: ./node_modules/antd/es/theme/util/genStyleUtils.js\nvar genStyleUtils = __webpack_require__(37358);\n;// ./node_modules/antd/es/modal/style/index.js\n\n\n\n\n\n\nfunction box(position) {\n  return {\n    position,\n    inset: 0\n  };\n}\nconst genModalMaskStyle = token => {\n  const {\n    componentCls,\n    antCls\n  } = token;\n  return [{\n    [`${componentCls}-root`]: {\n      [`${componentCls}${antCls}-zoom-enter, ${componentCls}${antCls}-zoom-appear`]: {\n        // reset scale avoid mousePosition bug\n        transform: 'none',\n        opacity: 0,\n        animationDuration: token.motionDurationSlow,\n        // https://github.com/ant-design/ant-design/issues/11777\n        userSelect: 'none'\n      },\n      // https://github.com/ant-design/ant-design/issues/37329\n      // https://github.com/ant-design/ant-design/issues/40272\n      [`${componentCls}${antCls}-zoom-leave ${componentCls}-content`]: {\n        pointerEvents: 'none'\n      },\n      [`${componentCls}-mask`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        height: '100%',\n        backgroundColor: token.colorBgMask,\n        pointerEvents: 'none',\n        [`${componentCls}-hidden`]: {\n          display: 'none'\n        }\n      }),\n      [`${componentCls}-wrap`]: Object.assign(Object.assign({}, box('fixed')), {\n        zIndex: token.zIndexPopupBase,\n        overflow: 'auto',\n        outline: 0,\n        WebkitOverflowScrolling: 'touch'\n      })\n    }\n  }, {\n    [`${componentCls}-root`]: (0,fade/* initFadeMotion */.p9)(token)\n  }];\n};\nconst genModalStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return [\n  // ======================== Root =========================\n  {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl'\n      },\n      [`${componentCls}-centered`]: {\n        textAlign: 'center',\n        '&::before': {\n          display: 'inline-block',\n          width: 0,\n          height: '100%',\n          verticalAlign: 'middle',\n          content: '\"\"'\n        },\n        [componentCls]: {\n          top: 0,\n          display: 'inline-block',\n          paddingBottom: 0,\n          textAlign: 'start',\n          verticalAlign: 'middle'\n        }\n      },\n      [`@media (max-width: ${token.screenSMMax}px)`]: {\n        [componentCls]: {\n          maxWidth: 'calc(100vw - 16px)',\n          margin: `${(0,cssinjs_es/* unit */.zA)(token.marginXS)} auto`\n        },\n        [`${componentCls}-centered`]: {\n          [componentCls]: {\n            flex: 1\n          }\n        }\n      }\n    }\n  },\n  // ======================== Modal ========================\n  {\n    [componentCls]: Object.assign(Object.assign({}, (0,es_style/* resetComponent */.dF)(token)), {\n      pointerEvents: 'none',\n      position: 'relative',\n      top: 100,\n      width: 'auto',\n      maxWidth: `calc(100vw - ${(0,cssinjs_es/* unit */.zA)(token.calc(token.margin).mul(2).equal())})`,\n      margin: '0 auto',\n      paddingBottom: token.paddingLG,\n      [`${componentCls}-title`]: {\n        margin: 0,\n        color: token.titleColor,\n        fontWeight: token.fontWeightStrong,\n        fontSize: token.titleFontSize,\n        lineHeight: token.titleLineHeight,\n        wordWrap: 'break-word'\n      },\n      [`${componentCls}-content`]: {\n        position: 'relative',\n        backgroundColor: token.contentBg,\n        backgroundClip: 'padding-box',\n        border: 0,\n        borderRadius: token.borderRadiusLG,\n        boxShadow: token.boxShadow,\n        pointerEvents: 'auto',\n        padding: token.contentPadding\n      },\n      [`${componentCls}-close`]: Object.assign({\n        position: 'absolute',\n        top: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        insetInlineEnd: token.calc(token.modalHeaderHeight).sub(token.modalCloseBtnSize).div(2).equal(),\n        zIndex: token.calc(token.zIndexPopupBase).add(10).equal(),\n        padding: 0,\n        color: token.modalCloseIconColor,\n        fontWeight: token.fontWeightStrong,\n        lineHeight: 1,\n        textDecoration: 'none',\n        background: 'transparent',\n        borderRadius: token.borderRadiusSM,\n        width: token.modalCloseBtnSize,\n        height: token.modalCloseBtnSize,\n        border: 0,\n        outline: 0,\n        cursor: 'pointer',\n        transition: `color ${token.motionDurationMid}, background-color ${token.motionDurationMid}`,\n        '&-x': {\n          display: 'flex',\n          fontSize: token.fontSizeLG,\n          fontStyle: 'normal',\n          lineHeight: (0,cssinjs_es/* unit */.zA)(token.modalCloseBtnSize),\n          justifyContent: 'center',\n          textTransform: 'none',\n          textRendering: 'auto'\n        },\n        '&:disabled': {\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          color: token.modalCloseIconHoverColor,\n          backgroundColor: token.colorBgTextHover,\n          textDecoration: 'none'\n        },\n        '&:active': {\n          backgroundColor: token.colorBgTextActive\n        }\n      }, (0,es_style/* genFocusStyle */.K8)(token)),\n      [`${componentCls}-header`]: {\n        color: token.colorText,\n        background: token.headerBg,\n        borderRadius: `${(0,cssinjs_es/* unit */.zA)(token.borderRadiusLG)} ${(0,cssinjs_es/* unit */.zA)(token.borderRadiusLG)} 0 0`,\n        marginBottom: token.headerMarginBottom,\n        padding: token.headerPadding,\n        borderBottom: token.headerBorderBottom\n      },\n      [`${componentCls}-body`]: {\n        fontSize: token.fontSize,\n        lineHeight: token.lineHeight,\n        wordWrap: 'break-word',\n        padding: token.bodyPadding,\n        [`${componentCls}-body-skeleton`]: {\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          margin: `${(0,cssinjs_es/* unit */.zA)(token.margin)} auto`\n        }\n      },\n      [`${componentCls}-footer`]: {\n        textAlign: 'end',\n        background: token.footerBg,\n        marginTop: token.footerMarginTop,\n        padding: token.footerPadding,\n        borderTop: token.footerBorderTop,\n        borderRadius: token.footerBorderRadius,\n        [`> ${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginInlineStart: token.marginXS\n        }\n      },\n      [`${componentCls}-open`]: {\n        overflow: 'hidden'\n      }\n    })\n  },\n  // ======================== Pure =========================\n  {\n    [`${componentCls}-pure-panel`]: {\n      top: 'auto',\n      padding: 0,\n      display: 'flex',\n      flexDirection: 'column',\n      [`${componentCls}-content,\n          ${componentCls}-body,\n          ${componentCls}-confirm-body-wrapper`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto'\n      },\n      [`${componentCls}-confirm-body`]: {\n        marginBottom: 'auto'\n      }\n    }\n  }];\n};\nconst genRTLStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [`${componentCls}-root`]: {\n      [`${componentCls}-wrap-rtl`]: {\n        direction: 'rtl',\n        [`${componentCls}-confirm-body`]: {\n          direction: 'rtl'\n        }\n      }\n    }\n  };\n};\nconst genResponsiveWidthStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const gridMediaSizesMap = (0,style/* getMediaSize */.i4)(token);\n  delete gridMediaSizesMap.xs;\n  const responsiveStyles = Object.keys(gridMediaSizesMap).map(key => ({\n    [`@media (min-width: ${(0,cssinjs_es/* unit */.zA)(gridMediaSizesMap[key])})`]: {\n      width: `var(--${componentCls.replace('.', '')}-${key}-width)`\n    }\n  }));\n  return {\n    [`${componentCls}-root`]: {\n      [componentCls]: [{\n        width: `var(--${componentCls.replace('.', '')}-xs-width)`\n      }].concat((0,toConsumableArray/* default */.A)(responsiveStyles))\n    }\n  };\n};\n// ============================== Export ==============================\nconst prepareToken = token => {\n  const headerPaddingVertical = token.padding;\n  const headerFontSize = token.fontSizeHeading5;\n  const headerLineHeight = token.lineHeightHeading5;\n  const modalToken = (0,cssinjs_utils_es/* mergeToken */.oX)(token, {\n    modalHeaderHeight: token.calc(token.calc(headerLineHeight).mul(headerFontSize).equal()).add(token.calc(headerPaddingVertical).mul(2).equal()).equal(),\n    modalFooterBorderColorSplit: token.colorSplit,\n    modalFooterBorderStyle: token.lineType,\n    modalFooterBorderWidth: token.lineWidth,\n    modalCloseIconColor: token.colorIcon,\n    modalCloseIconHoverColor: token.colorIconHover,\n    modalCloseBtnSize: token.controlHeight,\n    modalConfirmIconSize: token.fontHeight,\n    modalTitleHeight: token.calc(token.titleFontSize).mul(token.titleLineHeight).equal()\n  });\n  return modalToken;\n};\nconst prepareComponentToken = token => ({\n  footerBg: 'transparent',\n  headerBg: token.colorBgElevated,\n  titleLineHeight: token.lineHeightHeading5,\n  titleFontSize: token.fontSizeHeading5,\n  contentBg: token.colorBgElevated,\n  titleColor: token.colorTextHeading,\n  // internal\n  contentPadding: token.wireframe ? 0 : `${(0,cssinjs_es/* unit */.zA)(token.paddingMD)} ${(0,cssinjs_es/* unit */.zA)(token.paddingContentHorizontalLG)}`,\n  headerPadding: token.wireframe ? `${(0,cssinjs_es/* unit */.zA)(token.padding)} ${(0,cssinjs_es/* unit */.zA)(token.paddingLG)}` : 0,\n  headerBorderBottom: token.wireframe ? `${(0,cssinjs_es/* unit */.zA)(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  headerMarginBottom: token.wireframe ? 0 : token.marginXS,\n  bodyPadding: token.wireframe ? token.paddingLG : 0,\n  footerPadding: token.wireframe ? `${(0,cssinjs_es/* unit */.zA)(token.paddingXS)} ${(0,cssinjs_es/* unit */.zA)(token.padding)}` : 0,\n  footerBorderTop: token.wireframe ? `${(0,cssinjs_es/* unit */.zA)(token.lineWidth)} ${token.lineType} ${token.colorSplit}` : 'none',\n  footerBorderRadius: token.wireframe ? `0 0 ${(0,cssinjs_es/* unit */.zA)(token.borderRadiusLG)} ${(0,cssinjs_es/* unit */.zA)(token.borderRadiusLG)}` : 0,\n  footerMarginTop: token.wireframe ? 0 : token.marginSM,\n  confirmBodyPadding: token.wireframe ? `${(0,cssinjs_es/* unit */.zA)(token.padding * 2)} ${(0,cssinjs_es/* unit */.zA)(token.padding * 2)} ${(0,cssinjs_es/* unit */.zA)(token.paddingLG)}` : 0,\n  confirmIconMarginInlineEnd: token.wireframe ? token.margin : token.marginSM,\n  confirmBtnsMarginTop: token.wireframe ? token.marginLG : token.marginSM\n});\n/* harmony default export */ const modal_style = ((0,genStyleUtils/* genStyleHooks */.OF)('Modal', token => {\n  const modalToken = prepareToken(token);\n  return [genModalStyle(modalToken), genRTLStyle(modalToken), genModalMaskStyle(modalToken), (0,zoom/* initZoomMotion */.aB)(modalToken, 'zoom'), genResponsiveWidthStyle(modalToken)];\n}, prepareComponentToken, {\n  unitless: {\n    titleLineHeight: true\n  }\n}));\n;// ./node_modules/antd/es/modal/Modal.js\n\"use client\";\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet mousePosition;\n// ref: https://github.com/ant-design/ant-design/issues/15795\nconst getClickPosition = e => {\n  mousePosition = {\n    x: e.pageX,\n    y: e.pageY\n  };\n  // 100ms 内发生过点击事件，则从点击位置动画展示\n  // 否则直接 zoom 展示\n  // 这样可以兼容非点击方式展开\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n// 只有点击事件支持从鼠标位置动画展开\nif ((0,styleChecker/* canUseDocElement */.q)()) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\nconst Modal = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      open,\n      wrapClassName,\n      centered,\n      getContainer,\n      focusTriggerAfterClose = true,\n      style,\n      // Deprecated\n      visible,\n      width = 520,\n      footer,\n      classNames: modalClassNames,\n      styles: modalStyles,\n      children,\n      loading,\n      confirmLoading,\n      zIndex: customizeZIndex,\n      mousePosition: customizeMousePosition,\n      onOk,\n      onCancel\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"open\", \"wrapClassName\", \"centered\", \"getContainer\", \"focusTriggerAfterClose\", \"style\", \"visible\", \"width\", \"footer\", \"classNames\", \"styles\", \"children\", \"loading\", \"confirmLoading\", \"zIndex\", \"mousePosition\", \"onOk\", \"onCancel\"]);\n  const {\n    getPopupContainer: getContextPopupContainer,\n    getPrefixCls,\n    direction,\n    modal: modalContext\n  } = react.useContext(context/* ConfigContext */.QO);\n  const handleCancel = e => {\n    if (confirmLoading) {\n      return;\n    }\n    onCancel === null || onCancel === void 0 ? void 0 : onCancel(e);\n  };\n  const handleOk = e => {\n    onOk === null || onOk === void 0 ? void 0 : onOk(e);\n  };\n  if (false) {}\n  const prefixCls = getPrefixCls('modal', customizePrefixCls);\n  const rootPrefixCls = getPrefixCls();\n  // Style\n  const rootCls = (0,useCSSVarCls/* default */.A)(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = modal_style(prefixCls, rootCls);\n  const wrapClassNameExtended = classnames_default()(wrapClassName, {\n    [`${prefixCls}-centered`]: centered !== null && centered !== void 0 ? centered : modalContext === null || modalContext === void 0 ? void 0 : modalContext.centered,\n    [`${prefixCls}-wrap-rtl`]: direction === 'rtl'\n  });\n  const dialogFooter = footer !== null && !loading ? (/*#__PURE__*/react.createElement(Footer, Object.assign({}, props, {\n    onOk: handleOk,\n    onCancel: handleCancel\n  }))) : null;\n  const [mergedClosable, mergedCloseIcon, closeBtnIsDisabled] = (0,useClosable/* default */.A)((0,useClosable/* pickClosable */.d)(props), (0,useClosable/* pickClosable */.d)(modalContext), {\n    closable: true,\n    closeIcon: /*#__PURE__*/react.createElement(CloseOutlined/* default */.A, {\n      className: `${prefixCls}-close-icon`\n    }),\n    closeIconRender: icon => renderCloseIcon(prefixCls, icon)\n  });\n  // ============================ Refs ============================\n  // Select `ant-modal-content` by `panelRef`\n  const panelRef = (0,watermark_context/* usePanelRef */.f)(`.${prefixCls}-content`);\n  // ============================ zIndex ============================\n  const [zIndex, contextZIndex] = (0,useZIndex/* useZIndex */.YK)('Modal', customizeZIndex);\n  // =========================== Width ============================\n  const [numWidth, responsiveWidth] = react.useMemo(() => {\n    if (width && typeof width === 'object') {\n      return [undefined, width];\n    }\n    return [width, undefined];\n  }, [width]);\n  const responsiveWidthVars = react.useMemo(() => {\n    const vars = {};\n    if (responsiveWidth) {\n      Object.keys(responsiveWidth).forEach(breakpoint => {\n        const breakpointWidth = responsiveWidth[breakpoint];\n        if (breakpointWidth !== undefined) {\n          vars[`--${prefixCls}-${breakpoint}-width`] = typeof breakpointWidth === 'number' ? `${breakpointWidth}px` : breakpointWidth;\n        }\n      });\n    }\n    return vars;\n  }, [responsiveWidth]);\n  // =========================== Render ===========================\n  return wrapCSSVar(/*#__PURE__*/react.createElement(ContextIsolator/* default */.A, {\n    form: true,\n    space: true\n  }, /*#__PURE__*/react.createElement(zindexContext/* default */.A.Provider, {\n    value: contextZIndex\n  }, /*#__PURE__*/react.createElement(es/* default */.A, Object.assign({\n    width: numWidth\n  }, restProps, {\n    zIndex: zIndex,\n    getContainer: getContainer === undefined ? getContextPopupContainer : getContainer,\n    prefixCls: prefixCls,\n    rootClassName: classnames_default()(hashId, rootClassName, cssVarCls, rootCls),\n    footer: dialogFooter,\n    visible: open !== null && open !== void 0 ? open : visible,\n    mousePosition: customizeMousePosition !== null && customizeMousePosition !== void 0 ? customizeMousePosition : mousePosition,\n    onClose: handleCancel,\n    closable: mergedClosable ? {\n      disabled: closeBtnIsDisabled,\n      closeIcon: mergedCloseIcon\n    } : mergedClosable,\n    closeIcon: mergedCloseIcon,\n    focusTriggerAfterClose: focusTriggerAfterClose,\n    transitionName: (0,motion/* getTransitionName */.b)(rootPrefixCls, 'zoom', props.transitionName),\n    maskTransitionName: (0,motion/* getTransitionName */.b)(rootPrefixCls, 'fade', props.maskTransitionName),\n    className: classnames_default()(hashId, className, modalContext === null || modalContext === void 0 ? void 0 : modalContext.className),\n    style: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.style), style), responsiveWidthVars),\n    classNames: Object.assign(Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.classNames), modalClassNames), {\n      wrapper: classnames_default()(wrapClassNameExtended, modalClassNames === null || modalClassNames === void 0 ? void 0 : modalClassNames.wrapper)\n    }),\n    styles: Object.assign(Object.assign({}, modalContext === null || modalContext === void 0 ? void 0 : modalContext.styles), modalStyles),\n    panelRef: panelRef\n  }), loading ? (/*#__PURE__*/react.createElement(skeleton/* default */.A, {\n    active: true,\n    title: false,\n    paragraph: {\n      rows: 4\n    },\n    className: `${prefixCls}-body-skeleton`\n  })) : children))));\n};\n/* harmony default export */ const modal_Modal = (Modal);\n;// ./node_modules/antd/es/modal/style/confirm.js\n// Style as confirm component\n\n\n\n\n// ============================= Confirm ==============================\nconst genModalConfirmStyle = token => {\n  const {\n    componentCls,\n    titleFontSize,\n    titleLineHeight,\n    modalConfirmIconSize,\n    fontSize,\n    lineHeight,\n    modalTitleHeight,\n    fontHeight,\n    confirmBodyPadding\n  } = token;\n  const confirmComponentCls = `${componentCls}-confirm`;\n  return {\n    [confirmComponentCls]: {\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      [`${token.antCls}-modal-header`]: {\n        display: 'none'\n      },\n      [`${confirmComponentCls}-body-wrapper`]: Object.assign({}, (0,es_style/* clearFix */.t6)()),\n      [`&${componentCls} ${componentCls}-body`]: {\n        padding: confirmBodyPadding\n      },\n      // ====================== Body ======================\n      [`${confirmComponentCls}-body`]: {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${token.iconCls}`]: {\n          flex: 'none',\n          fontSize: modalConfirmIconSize,\n          marginInlineEnd: token.confirmIconMarginInlineEnd,\n          marginTop: token.calc(token.calc(fontHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        },\n        [`&-has-title > ${token.iconCls}`]: {\n          marginTop: token.calc(token.calc(modalTitleHeight).sub(modalConfirmIconSize).equal()).div(2).equal()\n        }\n      },\n      [`${confirmComponentCls}-paragraph`]: {\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 'auto',\n        rowGap: token.marginXS,\n        // https://github.com/ant-design/ant-design/issues/51912\n        maxWidth: `calc(100% - ${(0,cssinjs_es/* unit */.zA)(token.marginSM)})`\n      },\n      // https://github.com/ant-design/ant-design/issues/48159\n      [`${token.iconCls} + ${confirmComponentCls}-paragraph`]: {\n        maxWidth: `calc(100% - ${(0,cssinjs_es/* unit */.zA)(token.calc(token.modalConfirmIconSize).add(token.marginSM).equal())})`\n      },\n      [`${confirmComponentCls}-title`]: {\n        color: token.colorTextHeading,\n        fontWeight: token.fontWeightStrong,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight\n      },\n      [`${confirmComponentCls}-content`]: {\n        color: token.colorText,\n        fontSize,\n        lineHeight\n      },\n      // ===================== Footer =====================\n      [`${confirmComponentCls}-btns`]: {\n        textAlign: 'end',\n        marginTop: token.confirmBtnsMarginTop,\n        [`${token.antCls}-btn + ${token.antCls}-btn`]: {\n          marginBottom: 0,\n          marginInlineStart: token.marginXS\n        }\n      }\n    },\n    [`${confirmComponentCls}-error ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorError\n    },\n    [`${confirmComponentCls}-warning ${confirmComponentCls}-body > ${token.iconCls},\n        ${confirmComponentCls}-confirm ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorWarning\n    },\n    [`${confirmComponentCls}-info ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorInfo\n    },\n    [`${confirmComponentCls}-success ${confirmComponentCls}-body > ${token.iconCls}`]: {\n      color: token.colorSuccess\n    }\n  };\n};\n// ============================== Export ==============================\n/* harmony default export */ const style_confirm = ((0,genStyleUtils/* genSubStyleComponent */.bf)(['Modal', 'confirm'], token => {\n  const modalToken = prepareToken(token);\n  return [genModalConfirmStyle(modalToken)];\n}, prepareComponentToken, {\n  // confirm is weak than modal since no conflict here\n  order: -1000\n}));\n;// ./node_modules/antd/es/modal/ConfirmDialog.js\n\"use client\";\n\n\nvar ConfirmDialog_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction ConfirmContent(props) {\n  const {\n      prefixCls,\n      icon,\n      okText,\n      cancelText,\n      confirmPrefixCls,\n      type,\n      okCancel,\n      footer,\n      // Legacy for static function usage\n      locale: staticLocale\n    } = props,\n    resetProps = ConfirmDialog_rest(props, [\"prefixCls\", \"icon\", \"okText\", \"cancelText\", \"confirmPrefixCls\", \"type\", \"okCancel\", \"footer\", \"locale\"]);\n  if (false) {}\n  // Icon\n  let mergedIcon = icon;\n  // 支持传入{ icon: null }来隐藏`Modal.confirm`默认的Icon\n  if (!icon && icon !== null) {\n    switch (type) {\n      case 'info':\n        mergedIcon = /*#__PURE__*/react.createElement(InfoCircleFilled/* default */.A, null);\n        break;\n      case 'success':\n        mergedIcon = /*#__PURE__*/react.createElement(CheckCircleFilled/* default */.A, null);\n        break;\n      case 'error':\n        mergedIcon = /*#__PURE__*/react.createElement(CloseCircleFilled/* default */.A, null);\n        break;\n      default:\n        mergedIcon = /*#__PURE__*/react.createElement(ExclamationCircleFilled/* default */.A, null);\n    }\n  }\n  // 默认为 true，保持向下兼容\n  const mergedOkCancel = okCancel !== null && okCancel !== void 0 ? okCancel : type === 'confirm';\n  const autoFocusButton = props.autoFocusButton === null ? false : props.autoFocusButton || 'ok';\n  const [locale] = (0,useLocale/* default */.A)('Modal');\n  const mergedLocale = staticLocale || locale;\n  // ================== Locale Text ==================\n  const okTextLocale = okText || (mergedOkCancel ? mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.okText : mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.justOkText);\n  const cancelTextLocale = cancelText || (mergedLocale === null || mergedLocale === void 0 ? void 0 : mergedLocale.cancelText);\n  // ================= Context Value =================\n  const btnCtxValue = Object.assign({\n    autoFocusButton,\n    cancelTextLocale,\n    okTextLocale,\n    mergedOkCancel\n  }, resetProps);\n  const btnCtxValueMemo = react.useMemo(() => btnCtxValue, (0,toConsumableArray/* default */.A)(Object.values(btnCtxValue)));\n  // ====================== Footer Origin Node ======================\n  const footerOriginNode = /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(components_ConfirmCancelBtn, null), /*#__PURE__*/react.createElement(components_ConfirmOkBtn, null));\n  const hasTitle = props.title !== undefined && props.title !== null;\n  const bodyCls = `${confirmPrefixCls}-body`;\n  return /*#__PURE__*/react.createElement(\"div\", {\n    className: `${confirmPrefixCls}-body-wrapper`\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: classnames_default()(bodyCls, {\n      [`${bodyCls}-has-title`]: hasTitle\n    })\n  }, mergedIcon, /*#__PURE__*/react.createElement(\"div\", {\n    className: `${confirmPrefixCls}-paragraph`\n  }, hasTitle && /*#__PURE__*/react.createElement(\"span\", {\n    className: `${confirmPrefixCls}-title`\n  }, props.title), /*#__PURE__*/react.createElement(\"div\", {\n    className: `${confirmPrefixCls}-content`\n  }, props.content))), footer === undefined || typeof footer === 'function' ? (/*#__PURE__*/react.createElement(ModalContextProvider, {\n    value: btnCtxValueMemo\n  }, /*#__PURE__*/react.createElement(\"div\", {\n    className: `${confirmPrefixCls}-btns`\n  }, typeof footer === 'function' ? footer(footerOriginNode, {\n    OkBtn: components_ConfirmOkBtn,\n    CancelBtn: components_ConfirmCancelBtn\n  }) : footerOriginNode))) : footer, /*#__PURE__*/react.createElement(style_confirm, {\n    prefixCls: prefixCls\n  }));\n}\nconst ConfirmDialog_ConfirmDialog = props => {\n  const {\n    close,\n    zIndex,\n    maskStyle,\n    direction,\n    prefixCls,\n    wrapClassName,\n    rootPrefixCls,\n    bodyStyle,\n    closable = false,\n    onConfirm,\n    styles\n  } = props;\n  if (false) {}\n  const confirmPrefixCls = `${prefixCls}-confirm`;\n  const width = props.width || 416;\n  const style = props.style || {};\n  const mask = props.mask === undefined ? true : props.mask;\n  // 默认为 false，保持旧版默认行为\n  const maskClosable = props.maskClosable === undefined ? false : props.maskClosable;\n  const classString = classnames_default()(confirmPrefixCls, `${confirmPrefixCls}-${props.type}`, {\n    [`${confirmPrefixCls}-rtl`]: direction === 'rtl'\n  }, props.className);\n  // ========================= zIndex =========================\n  const [, token] = (0,useToken/* default */.Ay)();\n  const mergedZIndex = react.useMemo(() => {\n    if (zIndex !== undefined) {\n      return zIndex;\n    }\n    // Static always use max zIndex\n    return token.zIndexPopupBase + useZIndex/* CONTAINER_MAX_OFFSET */.jH;\n  }, [zIndex, token]);\n  // ========================= Render =========================\n  return /*#__PURE__*/react.createElement(modal_Modal, Object.assign({}, props, {\n    className: classString,\n    wrapClassName: classnames_default()({\n      [`${confirmPrefixCls}-centered`]: !!props.centered\n    }, wrapClassName),\n    onCancel: () => {\n      close === null || close === void 0 ? void 0 : close({\n        triggerCancel: true\n      });\n      onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm(false);\n    },\n    title: \"\",\n    footer: null,\n    transitionName: (0,motion/* getTransitionName */.b)(rootPrefixCls || '', 'zoom', props.transitionName),\n    maskTransitionName: (0,motion/* getTransitionName */.b)(rootPrefixCls || '', 'fade', props.maskTransitionName),\n    mask: mask,\n    maskClosable: maskClosable,\n    style: style,\n    styles: Object.assign({\n      body: bodyStyle,\n      mask: maskStyle\n    }, styles),\n    width: width,\n    zIndex: mergedZIndex,\n    closable: closable\n  }), /*#__PURE__*/react.createElement(ConfirmContent, Object.assign({}, props, {\n    confirmPrefixCls: confirmPrefixCls\n  })));\n};\nconst ConfirmDialog_ConfirmDialogWrapper = props => {\n  const {\n    rootPrefixCls,\n    iconPrefixCls,\n    direction,\n    theme\n  } = props;\n  return /*#__PURE__*/react.createElement(config_provider/* default */.Ay, {\n    prefixCls: rootPrefixCls,\n    iconPrefixCls: iconPrefixCls,\n    direction: direction,\n    theme: theme\n  }, /*#__PURE__*/react.createElement(ConfirmDialog_ConfirmDialog, Object.assign({}, props)));\n};\nif (false) {}\n/* harmony default export */ const modal_ConfirmDialog = (ConfirmDialog_ConfirmDialogWrapper);\n;// ./node_modules/antd/es/modal/useModal/HookModal.js\n\"use client\";\n\n\nvar HookModal_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\n\nconst HookModal = (_a, ref) => {\n  var _b;\n  var {\n      afterClose: hookAfterClose,\n      config\n    } = _a,\n    restProps = HookModal_rest(_a, [\"afterClose\", \"config\"]);\n  const [open, setOpen] = react.useState(true);\n  const [innerConfig, setInnerConfig] = react.useState(config);\n  const {\n    direction,\n    getPrefixCls\n  } = react.useContext(context/* ConfigContext */.QO);\n  const prefixCls = getPrefixCls('modal');\n  const rootPrefixCls = getPrefixCls();\n  const afterClose = () => {\n    var _a;\n    hookAfterClose();\n    (_a = innerConfig.afterClose) === null || _a === void 0 ? void 0 : _a.call(innerConfig);\n  };\n  const close = function () {\n    var _a;\n    setOpen(false);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param === null || param === void 0 ? void 0 : param.triggerCancel);\n    if (triggerCancel) {\n      var _a2;\n      (_a = innerConfig.onCancel) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [innerConfig, () => {}].concat((0,toConsumableArray/* default */.A)(args.slice(1))));\n    }\n  };\n  react.useImperativeHandle(ref, () => ({\n    destroy: close,\n    update: newConfig => {\n      setInnerConfig(originConfig => Object.assign(Object.assign({}, originConfig), newConfig));\n    }\n  }));\n  const mergedOkCancel = (_b = innerConfig.okCancel) !== null && _b !== void 0 ? _b : innerConfig.type === 'confirm';\n  const [contextLocale] = (0,useLocale/* default */.A)('Modal', en_US/* default */.A.Modal);\n  return /*#__PURE__*/react.createElement(modal_ConfirmDialog, Object.assign({\n    prefixCls: prefixCls,\n    rootPrefixCls: rootPrefixCls\n  }, innerConfig, {\n    close: close,\n    open: open,\n    afterClose: afterClose,\n    okText: innerConfig.okText || (mergedOkCancel ? contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.okText : contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.justOkText),\n    direction: innerConfig.direction || direction,\n    cancelText: innerConfig.cancelText || (contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.cancelText)\n  }, restProps));\n};\n/* harmony default export */ const useModal_HookModal = (/*#__PURE__*/react.forwardRef(HookModal));\n;// ./node_modules/antd/es/modal/useModal/index.js\n\"use client\";\n\n\n\n\n\n\n\nlet uuid = 0;\nconst ElementsHolder = /*#__PURE__*/react.memo(/*#__PURE__*/react.forwardRef((_props, ref) => {\n  const [elements, patchElement] = (0,usePatchElement/* default */.A)();\n  react.useImperativeHandle(ref, () => ({\n    patchElement\n  }), []);\n  return /*#__PURE__*/react.createElement(react.Fragment, null, elements);\n}));\nfunction useModal() {\n  const holderRef = react.useRef(null);\n  // ========================== Effect ==========================\n  const [actionQueue, setActionQueue] = react.useState([]);\n  react.useEffect(() => {\n    if (actionQueue.length) {\n      const cloneQueue = (0,toConsumableArray/* default */.A)(actionQueue);\n      cloneQueue.forEach(action => {\n        action();\n      });\n      setActionQueue([]);\n    }\n  }, [actionQueue]);\n  // =========================== Hook ===========================\n  const getConfirmFunc = react.useCallback(withFunc => function hookConfirm(config) {\n    var _a;\n    uuid += 1;\n    const modalRef = /*#__PURE__*/react.createRef();\n    // Proxy to promise with `onClose`\n    let resolvePromise;\n    const promise = new Promise(resolve => {\n      resolvePromise = resolve;\n    });\n    let silent = false;\n    let closeFunc;\n    const modal = /*#__PURE__*/react.createElement(useModal_HookModal, {\n      key: `modal-${uuid}`,\n      config: withFunc(config),\n      ref: modalRef,\n      afterClose: () => {\n        closeFunc === null || closeFunc === void 0 ? void 0 : closeFunc();\n      },\n      isSilent: () => silent,\n      onConfirm: confirmed => {\n        resolvePromise(confirmed);\n      }\n    });\n    closeFunc = (_a = holderRef.current) === null || _a === void 0 ? void 0 : _a.patchElement(modal);\n    if (closeFunc) {\n      modal_destroyFns.push(closeFunc);\n    }\n    const instance = {\n      destroy: () => {\n        function destroyAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.destroy();\n        }\n        if (modalRef.current) {\n          destroyAction();\n        } else {\n          setActionQueue(prev => [].concat((0,toConsumableArray/* default */.A)(prev), [destroyAction]));\n        }\n      },\n      update: newConfig => {\n        function updateAction() {\n          var _a;\n          (_a = modalRef.current) === null || _a === void 0 ? void 0 : _a.update(newConfig);\n        }\n        if (modalRef.current) {\n          updateAction();\n        } else {\n          setActionQueue(prev => [].concat((0,toConsumableArray/* default */.A)(prev), [updateAction]));\n        }\n      },\n      then: resolve => {\n        silent = true;\n        return promise.then(resolve);\n      }\n    };\n    return instance;\n  }, []);\n  const fns = react.useMemo(() => ({\n    info: getConfirmFunc(withInfo),\n    success: getConfirmFunc(withSuccess),\n    error: getConfirmFunc(withError),\n    warning: getConfirmFunc(withWarn),\n    confirm: getConfirmFunc(withConfirm)\n  }), []);\n  return [fns, /*#__PURE__*/react.createElement(ElementsHolder, {\n    key: \"modal-holder\",\n    ref: holderRef\n  })];\n}\n/* harmony default export */ const modal_useModal = (useModal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94691\n")}}]);